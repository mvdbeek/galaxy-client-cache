(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["ruleCollectionBuilder"],{

/***/ "./galaxy/scripts/components/RuleCollectionBuilder.vue":
/*!*************************************************************!*\
  !*** ./galaxy/scripts/components/RuleCollectionBuilder.vue ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _RuleCollectionBuilder_vue_vue_type_template_id_61c51560___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RuleCollectionBuilder.vue?vue&type=template&id=61c51560& */ \"./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=template&id=61c51560&\");\n/* harmony import */ var _RuleCollectionBuilder_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RuleCollectionBuilder.vue?vue&type=script&lang=js& */ \"./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_handsontable_dist_handsontable_full_css_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/handsontable/dist/handsontable.full.css?vue&type=style&index=0&lang=css& */ \"./node_modules/handsontable/dist/handsontable.full.css?vue&type=style&index=0&lang=css&\");\n/* harmony import */ var _RuleCollectionBuilder_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RuleCollectionBuilder.vue?vue&type=style&index=1&lang=css& */ \"./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=style&index=1&lang=css&\");\n/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n  _RuleCollectionBuilder_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _RuleCollectionBuilder_vue_vue_type_template_id_61c51560___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _RuleCollectionBuilder_vue_vue_type_template_id_61c51560___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"galaxy/scripts/components/RuleCollectionBuilder.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9nYWxheHkvc2NyaXB0cy9jb21wb25lbnRzL1J1bGVDb2xsZWN0aW9uQnVpbGRlci52dWUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9nYWxheHkvc2NyaXB0cy9jb21wb25lbnRzL1J1bGVDb2xsZWN0aW9uQnVpbGRlci52dWU/OWFiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1J1bGVDb2xsZWN0aW9uQnVpbGRlci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjFjNTE1NjAmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vUnVsZUNvbGxlY3Rpb25CdWlsZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vUnVsZUNvbGxlY3Rpb25CdWlsZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2hhbmRzb250YWJsZS9kaXN0L2hhbmRzb250YWJsZS5mdWxsLmNzcz92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9Y3NzJlwiXG5pbXBvcnQgc3R5bGUxIGZyb20gXCIuL1J1bGVDb2xsZWN0aW9uQnVpbGRlci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MSZsYW5nPWNzcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiL2hvbWUvcnVubmVyL3dvcmsvZ2FsYXh5LWNsaWVudC1jYWNoZS9nYWxheHktY2xpZW50LWNhY2hlL2dhbGF4eS9jbGllbnQvbm9kZV9tb2R1bGVzL3Z1ZS1ob3QtcmVsb2FkLWFwaS9kaXN0L2luZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnNjFjNTE1NjAnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnNjFjNTE1NjAnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnNjFjNTE1NjAnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL1J1bGVDb2xsZWN0aW9uQnVpbGRlci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjFjNTE1NjAmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignNjFjNTE1NjAnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcImdhbGF4eS9zY3JpcHRzL2NvbXBvbmVudHMvUnVsZUNvbGxlY3Rpb25CdWlsZGVyLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBaUJBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./galaxy/scripts/components/RuleCollectionBuilder.vue\n");

/***/ }),

/***/ "./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=script&lang=js&":
/*!**************************************************************************************!*\
  !*** ./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_1_node_modules_vue_loader_lib_index_js_vue_loader_options_RuleCollectionBuilder_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--1!../../../node_modules/vue-loader/lib??vue-loader-options!./RuleCollectionBuilder.vue?vue&type=script&lang=js& */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_1_node_modules_vue_loader_lib_index_js_vue_loader_options_RuleCollectionBuilder_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9nYWxheHkvc2NyaXB0cy9jb21wb25lbnRzL1J1bGVDb2xsZWN0aW9uQnVpbGRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vZ2FsYXh5L3NjcmlwdHMvY29tcG9uZW50cy9SdWxlQ29sbGVjdGlvbkJ1aWxkZXIudnVlPzllOGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vUnVsZUNvbGxlY3Rpb25CdWlsZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vUnVsZUNvbGxlY3Rpb25CdWlsZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=style&index=1&lang=css&":
/*!**********************************************************************************************!*\
  !*** ./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=style&index=1&lang=css& ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_7_0_node_modules_css_loader_dist_cjs_js_ref_7_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_7_2_node_modules_sass_loader_dist_cjs_js_ref_7_3_node_modules_vue_loader_lib_index_js_vue_loader_options_RuleCollectionBuilder_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src??ref--7-2!../../../node_modules/sass-loader/dist/cjs.js??ref--7-3!../../../node_modules/vue-loader/lib??vue-loader-options!./RuleCollectionBuilder.vue?vue&type=style&index=1&lang=css& */ \"./node_modules/mini-css-extract-plugin/dist/loader.js?!./node_modules/css-loader/dist/cjs.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=style&index=1&lang=css&\");\n/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_7_0_node_modules_css_loader_dist_cjs_js_ref_7_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_7_2_node_modules_sass_loader_dist_cjs_js_ref_7_3_node_modules_vue_loader_lib_index_js_vue_loader_options_RuleCollectionBuilder_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_mini_css_extract_plugin_dist_loader_js_ref_7_0_node_modules_css_loader_dist_cjs_js_ref_7_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_7_2_node_modules_sass_loader_dist_cjs_js_ref_7_3_node_modules_vue_loader_lib_index_js_vue_loader_options_RuleCollectionBuilder_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_mini_css_extract_plugin_dist_loader_js_ref_7_0_node_modules_css_loader_dist_cjs_js_ref_7_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_7_2_node_modules_sass_loader_dist_cjs_js_ref_7_3_node_modules_vue_loader_lib_index_js_vue_loader_options_RuleCollectionBuilder_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_mini_css_extract_plugin_dist_loader_js_ref_7_0_node_modules_css_loader_dist_cjs_js_ref_7_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_7_2_node_modules_sass_loader_dist_cjs_js_ref_7_3_node_modules_vue_loader_lib_index_js_vue_loader_options_RuleCollectionBuilder_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_mini_css_extract_plugin_dist_loader_js_ref_7_0_node_modules_css_loader_dist_cjs_js_ref_7_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_7_2_node_modules_sass_loader_dist_cjs_js_ref_7_3_node_modules_vue_loader_lib_index_js_vue_loader_options_RuleCollectionBuilder_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9nYWxheHkvc2NyaXB0cy9jb21wb25lbnRzL1J1bGVDb2xsZWN0aW9uQnVpbGRlci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MSZsYW5nPWNzcyYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9nYWxheHkvc2NyaXB0cy9jb21wb25lbnRzL1J1bGVDb2xsZWN0aW9uQnVpbGRlci52dWU/NDM1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcz8/cmVmLS03LTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNy0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTctMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNy0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vUnVsZUNvbGxlY3Rpb25CdWlsZGVyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0xJmxhbmc9Y3NzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcz8/cmVmLS03LTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNy0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTctMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNy0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vUnVsZUNvbGxlY3Rpb25CdWlsZGVyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0xJmxhbmc9Y3NzJlwiIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=style&index=1&lang=css&\n");

/***/ }),

/***/ "./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=template&id=61c51560&":
/*!********************************************************************************************!*\
  !*** ./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=template&id=61c51560& ***!
  \********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_RuleCollectionBuilder_vue_vue_type_template_id_61c51560___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./RuleCollectionBuilder.vue?vue&type=template&id=61c51560& */ \"./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=template&id=61c51560&\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_RuleCollectionBuilder_vue_vue_type_template_id_61c51560___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_RuleCollectionBuilder_vue_vue_type_template_id_61c51560___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9nYWxheHkvc2NyaXB0cy9jb21wb25lbnRzL1J1bGVDb2xsZWN0aW9uQnVpbGRlci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjFjNTE1NjAmLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vZ2FsYXh5L3NjcmlwdHMvY29tcG9uZW50cy9SdWxlQ29sbGVjdGlvbkJ1aWxkZXIudnVlPzMwNTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1J1bGVDb2xsZWN0aW9uQnVpbGRlci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjFjNTE1NjAmXCIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=template&id=61c51560&\n");

/***/ }),

/***/ "./galaxy/scripts/components/Select2.js":
/*!**********************************************!*\
  !*** ./galaxy/scripts/components/Select2.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./galaxy/scripts/libs/jquery.custom.js-exposed\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n// Based on https://vuejs.org/v2/examples/select2.html but adapted to handle list values\n// with \"multiple: true\" set.\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  props: [\"options\", \"value\", \"placeholder\", \"containerClass\", \"enabled\"],\n  render: function render() {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return _c('select', [_vm._t(\"default\")], 2);\n  },\n  staticRenderFns: [],\n  mounted: function mounted() {\n    var vm = this; // TODO: refactor property list to objects that allow defaults and types\n\n    var enabled = this.enabled;\n\n    if (enabled === undefined) {\n      enabled = true;\n    }\n\n    var select2Options = {\n      data: this.options,\n      placeholder: this.placeholder,\n      allowClear: !!this.placeholder,\n      enable: enabled,\n      dropdownAutoWidth: true\n    };\n\n    if (this.containerClass) {\n      select2Options.containerCssClass = this.containerClass;\n    }\n\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.$el) // init select2\n    .select2(select2Options).val(this.value).trigger(\"change\") // emit event on change.\n    .on(\"change\", function (event) {\n      vm.$emit(\"input\", event.val);\n    });\n  },\n  watch: {\n    value: function value(_value) {\n      // update value\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.$el).val(_value);\n    },\n    options: function options(_options) {\n      // update options\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.$el).empty().select2({\n        data: _options\n      });\n    },\n    enabled: function enabled(value) {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.$el).select2(\"enable\", value);\n    }\n  },\n  destroyed: function destroyed() {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.$el).off().select2(\"destroy\");\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9nYWxheHkvc2NyaXB0cy9jb21wb25lbnRzL1NlbGVjdDIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9nYWxheHkvc2NyaXB0cy9jb21wb25lbnRzL1NlbGVjdDIuanM/ZThlNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCYXNlZCBvbiBodHRwczovL3Z1ZWpzLm9yZy92Mi9leGFtcGxlcy9zZWxlY3QyLmh0bWwgYnV0IGFkYXB0ZWQgdG8gaGFuZGxlIGxpc3QgdmFsdWVzXG4vLyB3aXRoIFwibXVsdGlwbGU6IHRydWVcIiBzZXQuXG5pbXBvcnQgJCBmcm9tIFwianF1ZXJ5XCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBwcm9wczogW1wib3B0aW9uc1wiLCBcInZhbHVlXCIsIFwicGxhY2Vob2xkZXJcIiwgXCJjb250YWluZXJDbGFzc1wiLCBcImVuYWJsZWRcIl0sXG4gICAgdGVtcGxhdGU6IGA8c2VsZWN0PjxzbG90Pjwvc2xvdD48L3NlbGVjdD5gLFxuICAgIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29uc3Qgdm0gPSB0aGlzO1xuICAgICAgICAvLyBUT0RPOiByZWZhY3RvciBwcm9wZXJ0eSBsaXN0IHRvIG9iamVjdHMgdGhhdCBhbGxvdyBkZWZhdWx0cyBhbmQgdHlwZXNcbiAgICAgICAgbGV0IGVuYWJsZWQgPSB0aGlzLmVuYWJsZWQ7XG4gICAgICAgIGlmIChlbmFibGVkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGVuYWJsZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNlbGVjdDJPcHRpb25zID0ge1xuICAgICAgICAgICAgZGF0YTogdGhpcy5vcHRpb25zLFxuICAgICAgICAgICAgcGxhY2Vob2xkZXI6IHRoaXMucGxhY2Vob2xkZXIsXG4gICAgICAgICAgICBhbGxvd0NsZWFyOiAhIXRoaXMucGxhY2Vob2xkZXIsXG4gICAgICAgICAgICBlbmFibGU6IGVuYWJsZWQsXG4gICAgICAgICAgICBkcm9wZG93bkF1dG9XaWR0aDogdHJ1ZSxcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHRoaXMuY29udGFpbmVyQ2xhc3MpIHtcbiAgICAgICAgICAgIHNlbGVjdDJPcHRpb25zLmNvbnRhaW5lckNzc0NsYXNzID0gdGhpcy5jb250YWluZXJDbGFzcztcbiAgICAgICAgfVxuICAgICAgICAkKHRoaXMuJGVsKVxuICAgICAgICAgICAgLy8gaW5pdCBzZWxlY3QyXG4gICAgICAgICAgICAuc2VsZWN0MihzZWxlY3QyT3B0aW9ucylcbiAgICAgICAgICAgIC52YWwodGhpcy52YWx1ZSlcbiAgICAgICAgICAgIC50cmlnZ2VyKFwiY2hhbmdlXCIpXG4gICAgICAgICAgICAvLyBlbWl0IGV2ZW50IG9uIGNoYW5nZS5cbiAgICAgICAgICAgIC5vbihcImNoYW5nZVwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICB2bS4kZW1pdChcImlucHV0XCIsIGV2ZW50LnZhbCk7XG4gICAgICAgICAgICB9KTtcbiAgICB9LFxuICAgIHdhdGNoOiB7XG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgIC8vIHVwZGF0ZSB2YWx1ZVxuICAgICAgICAgICAgJCh0aGlzLiRlbCkudmFsKHZhbHVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgb3B0aW9uczogZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIC8vIHVwZGF0ZSBvcHRpb25zXG4gICAgICAgICAgICAkKHRoaXMuJGVsKS5lbXB0eSgpLnNlbGVjdDIoeyBkYXRhOiBvcHRpb25zIH0pO1xuICAgICAgICB9LFxuICAgICAgICBlbmFibGVkOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICQodGhpcy4kZWwpLnNlbGVjdDIoXCJlbmFibGVcIiwgdmFsdWUpO1xuICAgICAgICB9LFxuICAgIH0sXG4gICAgZGVzdHJveWVkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICQodGhpcy4kZWwpLm9mZigpLnNlbGVjdDIoXCJkZXN0cm95XCIpO1xuICAgIH0sXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBREE7QUFBQTtBQUNBO0FBREE7QUFDQTtBQURBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBWEE7QUFhQTtBQUNBO0FBQ0E7QUE3Q0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./galaxy/scripts/components/Select2.js\n");

/***/ }),

/***/ "./galaxy/scripts/mvc/upload/upload-utils.js":
/*!***************************************************!*\
  !*** ./galaxy/scripts/mvc/upload/upload-utils.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./galaxy/scripts/libs/jquery.custom.js-exposed\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var onload_loadConfig__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! onload/loadConfig */ \"./galaxy/scripts/onload/loadConfig.js-exposed\");\n/* harmony import */ var onload_loadConfig__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(onload_loadConfig__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nvar AUTO_EXTENSION = {\n  id: \"auto\",\n  text: \"Auto-detect\",\n  description: \"This system will try to detect the file type automatically. If your file is not detected properly as one of the known formats, it most likely means that it has some format problems (e.g., different number of columns on different rows). You can still coerce the system to set your data to the format you think it should be.  You can also upload compressed files, which will automatically be decompressed.\"\n};\nvar DEFAULT_GENOME = \"?\";\nvar DEFAULT_EXTENSION = \"auto\";\n\nfunction getUploadDatatypes(callback, datatypesDisableAuto, auto) {\n  var url = \"\".concat(Object(onload_loadConfig__WEBPACK_IMPORTED_MODULE_1__[\"getAppRoot\"])(), \"api/datatypes?extension_only=False\");\n  axios__WEBPACK_IMPORTED_MODULE_2___default.a.get(url).then(function (response) {\n    var datatypes = response.data;\n    var listExtensions = [];\n\n    for (var key in datatypes) {\n      listExtensions.push({\n        id: datatypes[key].extension,\n        text: datatypes[key].extension,\n        description: datatypes[key].description,\n        description_url: datatypes[key].description_url,\n        composite_files: datatypes[key].composite_files\n      });\n    }\n\n    listExtensions.sort(function (a, b) {\n      var a_text = a.text && a.text.toLowerCase();\n      var b_text = b.text && b.text.toLowerCase();\n      return a_text > b_text ? 1 : a_text < b_text ? -1 : 0;\n    });\n\n    if (!datatypesDisableAuto) {\n      listExtensions.unshift(auto);\n    }\n\n    callback(listExtensions);\n  })[\"catch\"](function (errorMessage) {\n    console.log(errorMessage);\n  });\n}\n\nfunction getUploadGenomes(callback, defaultGenome) {\n  var url = \"\".concat(Object(onload_loadConfig__WEBPACK_IMPORTED_MODULE_1__[\"getAppRoot\"])(), \"api/genomes\");\n  axios__WEBPACK_IMPORTED_MODULE_2___default.a.get(url).then(function (response) {\n    var genomes = response.data;\n    var listGenomes = [];\n\n    for (var key in genomes) {\n      listGenomes.push({\n        id: genomes[key][1],\n        text: genomes[key][0]\n      });\n    }\n\n    listGenomes.sort(function (a, b) {\n      if (a.id == defaultGenome) {\n        return -1;\n      }\n\n      if (b.id == defaultGenome) {\n        return 1;\n      }\n\n      return a.text > b.text ? 1 : a.text < b.text ? -1 : 0;\n    });\n    callback(listGenomes);\n  })[\"catch\"](function (errorMessage) {\n    console.log(errorMessage);\n  });\n}\n\nfunction getRemoteFiles(success, error) {\n  return jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ajax({\n    url: \"\".concat(Object(onload_loadConfig__WEBPACK_IMPORTED_MODULE_1__[\"getAppRoot\"])(), \"api/remote_files\"),\n    method: \"GET\",\n    success: success,\n    error: error\n  });\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  AUTO_EXTENSION: AUTO_EXTENSION,\n  DEFAULT_GENOME: DEFAULT_GENOME,\n  DEFAULT_EXTENSION: DEFAULT_EXTENSION,\n  getRemoteFiles: getRemoteFiles,\n  getUploadDatatypes: getUploadDatatypes,\n  getUploadGenomes: getUploadGenomes\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9nYWxheHkvc2NyaXB0cy9tdmMvdXBsb2FkL3VwbG9hZC11dGlscy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2dhbGF4eS9zY3JpcHRzL212Yy91cGxvYWQvdXBsb2FkLXV0aWxzLmpzPzAzNGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSBcImpxdWVyeVwiO1xuaW1wb3J0IHsgZ2V0QXBwUm9vdCB9IGZyb20gXCJvbmxvYWQvbG9hZENvbmZpZ1wiO1xuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xuXG5jb25zdCBBVVRPX0VYVEVOU0lPTiA9IHtcbiAgICBpZDogXCJhdXRvXCIsXG4gICAgdGV4dDogXCJBdXRvLWRldGVjdFwiLFxuICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICBcIlRoaXMgc3lzdGVtIHdpbGwgdHJ5IHRvIGRldGVjdCB0aGUgZmlsZSB0eXBlIGF1dG9tYXRpY2FsbHkuIElmIHlvdXIgZmlsZSBpcyBub3QgZGV0ZWN0ZWQgcHJvcGVybHkgYXMgb25lIG9mIHRoZSBrbm93biBmb3JtYXRzLCBpdCBtb3N0IGxpa2VseSBtZWFucyB0aGF0IGl0IGhhcyBzb21lIGZvcm1hdCBwcm9ibGVtcyAoZS5nLiwgZGlmZmVyZW50IG51bWJlciBvZiBjb2x1bW5zIG9uIGRpZmZlcmVudCByb3dzKS4gWW91IGNhbiBzdGlsbCBjb2VyY2UgdGhlIHN5c3RlbSB0byBzZXQgeW91ciBkYXRhIHRvIHRoZSBmb3JtYXQgeW91IHRoaW5rIGl0IHNob3VsZCBiZS4gIFlvdSBjYW4gYWxzbyB1cGxvYWQgY29tcHJlc3NlZCBmaWxlcywgd2hpY2ggd2lsbCBhdXRvbWF0aWNhbGx5IGJlIGRlY29tcHJlc3NlZC5cIixcbn07XG5jb25zdCBERUZBVUxUX0dFTk9NRSA9IFwiP1wiO1xuY29uc3QgREVGQVVMVF9FWFRFTlNJT04gPSBcImF1dG9cIjtcblxuZnVuY3Rpb24gZ2V0VXBsb2FkRGF0YXR5cGVzKGNhbGxiYWNrLCBkYXRhdHlwZXNEaXNhYmxlQXV0bywgYXV0bykge1xuICAgIGNvbnN0IHVybCA9IGAke2dldEFwcFJvb3QoKX1hcGkvZGF0YXR5cGVzP2V4dGVuc2lvbl9vbmx5PUZhbHNlYDtcbiAgICBheGlvc1xuICAgICAgICAuZ2V0KHVybClcbiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkYXRhdHlwZXMgPSByZXNwb25zZS5kYXRhO1xuICAgICAgICAgICAgY29uc3QgbGlzdEV4dGVuc2lvbnMgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBkYXRhdHlwZXMpIHtcbiAgICAgICAgICAgICAgICBsaXN0RXh0ZW5zaW9ucy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IGRhdGF0eXBlc1trZXldLmV4dGVuc2lvbixcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogZGF0YXR5cGVzW2tleV0uZXh0ZW5zaW9uLFxuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogZGF0YXR5cGVzW2tleV0uZGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uX3VybDogZGF0YXR5cGVzW2tleV0uZGVzY3JpcHRpb25fdXJsLFxuICAgICAgICAgICAgICAgICAgICBjb21wb3NpdGVfZmlsZXM6IGRhdGF0eXBlc1trZXldLmNvbXBvc2l0ZV9maWxlcyxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3RFeHRlbnNpb25zLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgYV90ZXh0ID0gYS50ZXh0ICYmIGEudGV4dC50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIHZhciBiX3RleHQgPSBiLnRleHQgJiYgYi50ZXh0LnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFfdGV4dCA+IGJfdGV4dCA/IDEgOiBhX3RleHQgPCBiX3RleHQgPyAtMSA6IDA7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICghZGF0YXR5cGVzRGlzYWJsZUF1dG8pIHtcbiAgICAgICAgICAgICAgICBsaXN0RXh0ZW5zaW9ucy51bnNoaWZ0KGF1dG8pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FsbGJhY2sobGlzdEV4dGVuc2lvbnMpO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycm9yTWVzc2FnZSkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3JNZXNzYWdlKTtcbiAgICAgICAgfSk7XG59XG5cbmZ1bmN0aW9uIGdldFVwbG9hZEdlbm9tZXMoY2FsbGJhY2ssIGRlZmF1bHRHZW5vbWUpIHtcbiAgICBjb25zdCB1cmwgPSBgJHtnZXRBcHBSb290KCl9YXBpL2dlbm9tZXNgO1xuICAgIGF4aW9zXG4gICAgICAgIC5nZXQodXJsKVxuICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGdlbm9tZXMgPSByZXNwb25zZS5kYXRhO1xuICAgICAgICAgICAgY29uc3QgbGlzdEdlbm9tZXMgPSBbXTtcblxuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIGdlbm9tZXMpIHtcbiAgICAgICAgICAgICAgICBsaXN0R2Vub21lcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IGdlbm9tZXNba2V5XVsxXSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogZ2Vub21lc1trZXldWzBdLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGlzdEdlbm9tZXMuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChhLmlkID09IGRlZmF1bHRHZW5vbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoYi5pZCA9PSBkZWZhdWx0R2Vub21lKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gYS50ZXh0ID4gYi50ZXh0ID8gMSA6IGEudGV4dCA8IGIudGV4dCA/IC0xIDogMDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY2FsbGJhY2sobGlzdEdlbm9tZXMpO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycm9yTWVzc2FnZSkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3JNZXNzYWdlKTtcbiAgICAgICAgfSk7XG59XG5cbmZ1bmN0aW9uIGdldFJlbW90ZUZpbGVzKHN1Y2Nlc3MsIGVycm9yKSB7XG4gICAgcmV0dXJuICQuYWpheCh7XG4gICAgICAgIHVybDogYCR7Z2V0QXBwUm9vdCgpfWFwaS9yZW1vdGVfZmlsZXNgLFxuICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICAgIHN1Y2Nlc3M6IHN1Y2Nlc3MsXG4gICAgICAgIGVycm9yOiBlcnJvcixcbiAgICB9KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIEFVVE9fRVhURU5TSU9OLFxuICAgIERFRkFVTFRfR0VOT01FLFxuICAgIERFRkFVTFRfRVhURU5TSU9OLFxuICAgIGdldFJlbW90ZUZpbGVzLFxuICAgIGdldFVwbG9hZERhdGF0eXBlcyxcbiAgICBnZXRVcGxvYWRHZW5vbWVzLFxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQTtBQU9BO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./galaxy/scripts/mvc/upload/upload-utils.js\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=script&lang=js&":
/*!********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--1!./node_modules/vue-loader/lib??vue-loader-options!./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./galaxy/scripts/libs/jquery.custom.js-exposed\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js-exposed\");\n/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(underscore__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var onload_loadConfig__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! onload/loadConfig */ \"./galaxy/scripts/onload/loadConfig.js-exposed\");\n/* harmony import */ var onload_loadConfig__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(onload_loadConfig__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app */ \"./galaxy/scripts/app/index.js\");\n/* harmony import */ var utils_ajax_queue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! utils/ajax-queue */ \"./galaxy/scripts/utils/ajax-queue.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var utils_localization__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! utils/localization */ \"./galaxy/scripts/utils/localization.js\");\n/* harmony import */ var utils_localization__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(utils_localization__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _handsontable_vue__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @handsontable/vue */ \"./node_modules/@handsontable/vue/vue-handsontable-ce.js\");\n/* harmony import */ var _handsontable_vue__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_handsontable_vue__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var mvc_upload_upload_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! mvc/upload/upload-utils */ \"./galaxy/scripts/mvc/upload/upload-utils.js\");\n/* harmony import */ var mvc_history_job_states_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! mvc/history/job-states-model */ \"./galaxy/scripts/mvc/history/job-states-model.js\");\n/* harmony import */ var mvc_rules_rule_definitions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! mvc/rules/rule-definitions */ \"./galaxy/scripts/mvc/rules/rule-definitions.js\");\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm.js\");\n/* harmony import */ var bootstrap_vue__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! bootstrap-vue */ \"./node_modules/bootstrap-vue/esm/index.js\");\n/* harmony import */ var components_Select2__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! components/Select2 */ \"./galaxy/scripts/components/Select2.js\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvue__WEBPACK_IMPORTED_MODULE_11__[\"default\"].use(bootstrap_vue__WEBPACK_IMPORTED_MODULE_12__[\"default\"]);\nvar RULES = mvc_rules_rule_definitions__WEBPACK_IMPORTED_MODULE_10__[\"default\"].RULES;\nvar MAPPING_TARGETS = mvc_rules_rule_definitions__WEBPACK_IMPORTED_MODULE_10__[\"default\"].MAPPING_TARGETS;\nvar ColumnSelector = {\n  render: function render() {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return !_vm.multiple || !_vm.ordered ? _c('div', {\n      staticClass: \"rule-column-selector\"\n    }, [_c('label', {\n      staticClass: \"d-flex justify-content-end align-items-center\"\n    }, [_c('span', {\n      directives: [{\n        name: \"b-tooltip\",\n        rawName: \"v-b-tooltip.hover\",\n        modifiers: {\n          \"hover\": true\n        }\n      }],\n      staticClass: \"mr-auto\",\n      attrs: {\n        \"title\": _vm.help\n      }\n    }, [_vm._v(_vm._s(_vm.label))]), _vm._v(\" \"), _c('div', {\n      directives: [{\n        name: \"b-tooltip\",\n        rawName: \"v-b-tooltip.hover\",\n        modifiers: {\n          \"hover\": true\n        }\n      }],\n      staticClass: \"mr-1\",\n      attrs: {\n        \"title\": _vm.title\n      }\n    }, [_c('select2', {\n      attrs: {\n        \"value\": _vm.target,\n        \"multiple\": _vm.multiple\n      },\n      on: {\n        \"input\": _vm.handleInput\n      }\n    }, _vm._l(_vm.colHeaders, function (col, index) {\n      return _c('option', {\n        domProps: {\n          \"value\": index\n        }\n      }, [_vm._v(_vm._s(col))]);\n    }), 0)], 1), _vm._v(\" \"), _vm._t(\"default\")], 2)]) : _c('div', {\n      staticClass: \"rule-column-selector\"\n    }, [_c('span', [_vm._v(_vm._s(_vm.label))]), _vm._v(\" \"), _vm._t(\"default\"), _vm._v(\" \"), _c('ol', [_vm._l(_vm.target, function (targetEl, index) {\n      return _c('li', {\n        key: targetEl,\n        staticClass: \"rule-column-selector-target\",\n        attrs: {\n          \"index\": index\n        }\n      }, [_vm._v(\"\\n                    \" + _vm._s(_vm.colHeaders[targetEl]) + \"\\n                    \"), _c('span', {\n        staticClass: \"fa fa-times rule-column-selector-target-remove\",\n        on: {\n          \"click\": function click($event) {\n            return _vm.handleRemove(index);\n          }\n        }\n      }), _vm._v(\" \"), index !== 0 ? _c('span', {\n        staticClass: \"fa fa-arrow-up rule-column-selector-up\",\n        on: {\n          \"click\": function click($event) {\n            return _vm.moveUp(index);\n          }\n        }\n      }) : _vm._e(), _vm._v(\" \"), index < _vm.target.length - 1 ? _c('span', {\n        staticClass: \"fa fa-arrow-down rule-column-selector-down\",\n        on: {\n          \"click\": function click($event) {\n            return _vm.moveUp(index + 1);\n          }\n        }\n      }) : _vm._e()]);\n    }), _vm._v(\" \"), this.target.length < this.colHeaders.length ? _c('li', [!_vm.orderedEdit ? _c('span', {\n      staticClass: \"rule-column-selector-target-add\"\n    }, [_c('i', {\n      on: {\n        \"click\": function click($event) {\n          return _vm.$emit('update:orderedEdit', true);\n        }\n      }\n    }, [_vm._v(\"... \" + _vm._s(_vm.l(\"Assign Another Column\")))])]) : _c('span', {\n      staticClass: \"rule-column-selector-target-select\"\n    }, [_c('select2', {\n      attrs: {\n        \"placeholder\": \"Select a column\"\n      },\n      on: {\n        \"input\": _vm.handleAdd\n      }\n    }, [_c('option'), _vm._v(\" \"), _vm._l(_vm.remainingHeaders, function (col, index) {\n      return _c('option', {\n        domProps: {\n          \"value\": index\n        }\n      }, [_vm._v(_vm._s(col))]);\n    })], 2)], 1)]) : _vm._e()], 2)], 2);\n  },\n  staticRenderFns: [],\n  data: function data() {\n    return {\n      l: utils_localization__WEBPACK_IMPORTED_MODULE_6___default.a\n    };\n  },\n  props: {\n    target: {\n      required: true\n    },\n    label: {\n      required: false,\n      type: String,\n      \"default\": utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"From Column\")\n    },\n    help: {\n      required: false\n    },\n    colHeaders: {\n      type: Array,\n      required: true\n    },\n    multiple: {\n      type: Boolean,\n      required: false,\n      \"default\": false\n    },\n    ordered: {\n      type: Boolean,\n      required: false,\n      \"default\": false\n    },\n    valueAsList: {\n      type: Boolean,\n      required: false,\n      \"default\": false\n    },\n    orderedEdit: {\n      type: Boolean,\n      required: false,\n      \"default\": false\n    }\n  },\n  computed: {\n    remainingHeaders: function remainingHeaders() {\n      var colHeaders = this.colHeaders;\n\n      if (!this.multiple) {\n        return colHeaders;\n      }\n\n      var remaining = {};\n\n      for (var key in colHeaders) {\n        if (this.target.indexOf(parseInt(key)) === -1) {\n          remaining[key] = colHeaders[key];\n        }\n      }\n\n      return remaining;\n    },\n    title: function title() {\n      return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Select a column\");\n    }\n  },\n  methods: {\n    handleInput: function handleInput(value) {\n      if (this.multiple) {\n        // https://stackoverflow.com/questions/262427/why-does-parseint-yield-nan-with-arraymap\n        var val = value.map(function (idx) {\n          return parseInt(idx);\n        });\n        this.$emit(\"update:target\", val);\n      } else {\n        var _val = parseInt(value);\n\n        if (this.valueAsList) {\n          _val = [_val];\n        }\n\n        this.$emit(\"update:target\", _val);\n      }\n    },\n    handleAdd: function handleAdd(value) {\n      this.target.push(parseInt(value));\n      this.$emit(\"update:orderedEdit\", false);\n    },\n    handleRemove: function handleRemove(index) {\n      this.target.splice(index, 1);\n    },\n    moveUp: function moveUp(value) {\n      var swapVal = this.target[value - 1];\n      vue__WEBPACK_IMPORTED_MODULE_11__[\"default\"].set(this.target, value - 1, this.target[value]);\n      vue__WEBPACK_IMPORTED_MODULE_11__[\"default\"].set(this.target, value, swapVal);\n    }\n  },\n  components: {\n    Select2: components_Select2__WEBPACK_IMPORTED_MODULE_13__[\"default\"]\n  }\n};\nvar RegularExpressionInput = {\n  render: function render() {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return _c('div', [_c('label', {\n      directives: [{\n        name: \"b-tooltip\",\n        rawName: \"v-b-tooltip.hover\",\n        modifiers: {\n          \"hover\": true\n        }\n      }],\n      attrs: {\n        \"for\": \"regular_expression\",\n        \"title\": _vm.title\n      }\n    }, [_vm._v(_vm._s(_vm.label))]), _vm._v(\" \"), _c('span', {\n      directives: [{\n        name: \"b-popover\",\n        rawName: \"v-b-popover.html\",\n        value: _vm.popoverContent,\n        expression: \"popoverContent\",\n        modifiers: {\n          \"html\": true\n        }\n      }],\n      staticClass: \"fa fa-question\",\n      attrs: {\n        \"title\": _vm.popoverTitle\n      }\n    }), _vm._v(\" \"), _c('input', {\n      directives: [{\n        name: \"b-tooltip\",\n        rawName: \"v-b-tooltip.hover.left\",\n        modifiers: {\n          \"hover\": true,\n          \"left\": true\n        }\n      }],\n      staticClass: \"rule-regular-expression\",\n      attrs: {\n        \"title\": _vm.title,\n        \"name\": \"regular_expression\",\n        \"type\": \"text\"\n      },\n      domProps: {\n        \"value\": _vm.target\n      },\n      on: {\n        \"input\": function input($event) {\n          return _vm.$emit('update:target', $event.target.value);\n        }\n      }\n    })]);\n  },\n  staticRenderFns: [],\n  props: {\n    target: {\n      required: true\n    }\n  },\n  computed: {\n    label: function label() {\n      return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Regular Expression\");\n    },\n    title: function title() {\n      return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Enter a regular expression.\");\n    },\n    popoverTitle: function popoverTitle() {\n      return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Regular Expressions\");\n    },\n    popoverContent: function popoverContent() {\n      return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Regular expressions are patterns used to match character combinations in strings. This input accepts Python-style regular expressions, find more information about these in <a href=\\\"https://pythonforbiologists.com/regular-expressions/\\\">this Python for Biologists tutorial</a>.\");\n    }\n  }\n};\nvar RuleDisplay = {\n  render: function render() {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return _c('li', {\n      staticClass: \"rule\"\n    }, [_c('span', {\n      staticClass: \"rule-display\"\n    }, [_c('span', {\n      staticClass: \"mr-1\"\n    }, [_vm._v(_vm._s(_vm.title))]), _vm._v(\" \"), _c('span', {\n      directives: [{\n        name: \"b-tooltip\",\n        rawName: \"v-b-tooltip.hover\",\n        modifiers: {\n          \"hover\": true\n        }\n      }],\n      staticClass: \"fa fa-edit mr-1\",\n      attrs: {\n        \"title\": _vm.editTitle\n      },\n      on: {\n        \"click\": _vm.edit\n      }\n    }), _vm._v(\" \"), _c('span', {\n      directives: [{\n        name: \"b-tooltip\",\n        rawName: \"v-b-tooltip.hover\",\n        modifiers: {\n          \"hover\": true\n        }\n      }],\n      staticClass: \"fa fa-times map\",\n      attrs: {\n        \"title\": _vm.removeTitle\n      },\n      on: {\n        \"click\": _vm.remove\n      }\n    })]), _vm._v(\" \"), _vm.rule.warn ? _c('span', {\n      staticClass: \"rule-warning\"\n    }, [_vm._v(\"\\n                \" + _vm._s(_vm.rule.warn) + \"\\n            \")]) : _vm._e(), _vm._v(\" \"), _vm.rule.error ? _c('span', {\n      staticClass: \"rule-error\"\n    }, [_c('span', {\n      staticClass: \"alert-message\"\n    }, [_vm._v(_vm._s(_vm.rule.error))])]) : _vm._e()]);\n  },\n  staticRenderFns: [],\n  props: {\n    rule: {\n      required: true,\n      type: Object\n    },\n    colHeaders: {\n      type: Array,\n      required: true\n    }\n  },\n  computed: {\n    title: function title() {\n      var ruleType = this.rule.type;\n      return RULES[ruleType].display(this.rule, this.colHeaders);\n    },\n    editTitle: function editTitle() {\n      return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Edit this rule.\");\n    },\n    removeTitle: function removeTitle() {\n      return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Remove this rule.\");\n    }\n  },\n  methods: {\n    edit: function edit() {\n      this.$emit(\"edit\");\n    },\n    remove: function remove() {\n      this.$emit(\"remove\");\n    }\n  }\n};\nvar IdentifierDisplay = {\n  render: function render() {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return _c('li', {\n      staticClass: \"rule\"\n    }, [_c('span', {\n      directives: [{\n        name: \"b-tooltip\",\n        rawName: \"v-b-tooltip.hover\",\n        modifiers: {\n          \"hover\": true\n        }\n      }],\n      attrs: {\n        \"title\": _vm.help\n      }\n    }, [_vm._v(\"Set \" + _vm._s(_vm.columnsLabel) + \" as \" + _vm._s(_vm.typeDisplay))]), _vm._v(\" \"), _c('span', {\n      directives: [{\n        name: \"b-tooltip\",\n        rawName: \"v-b-tooltip.hover\",\n        modifiers: {\n          \"hover\": true\n        }\n      }],\n      staticClass: \"fa fa-edit\",\n      attrs: {\n        \"title\": _vm.titleEdit\n      },\n      on: {\n        \"click\": _vm.edit\n      }\n    }), _vm._v(\" \"), _c('span', {\n      directives: [{\n        name: \"b-tooltip\",\n        rawName: \"v-b-tooltip.hover\",\n        modifiers: {\n          \"hover\": true\n        }\n      }],\n      staticClass: \"fa fa-times\",\n      attrs: {\n        \"title\": _vm.titleRemove\n      },\n      on: {\n        \"click\": _vm.remove\n      }\n    })]);\n  },\n  staticRenderFns: [],\n  props: {\n    type: {\n      type: String,\n      required: true\n    },\n    columns: {\n      required: true\n    },\n    colHeaders: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    remove: function remove() {\n      this.$emit(\"remove\");\n    },\n    edit: function edit() {\n      this.$emit(\"edit\");\n    }\n  },\n  computed: {\n    typeDisplay: function typeDisplay() {\n      return MAPPING_TARGETS[this.type].label;\n    },\n    help: function help() {\n      return MAPPING_TARGETS[this.type].help || \"\";\n    },\n    titleEdit: function titleEdit() {\n      return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Edit column definition\");\n    },\n    titleRemove: function titleRemove() {\n      return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Remove this column definition\");\n    },\n    columnsLabel: function columnsLabel() {\n      return mvc_rules_rule_definitions__WEBPACK_IMPORTED_MODULE_10__[\"default\"].columnDisplay(this.columns, this.colHeaders);\n    }\n  }\n};\nvar RuleTargetComponent = {\n  render: function render() {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return _c('a', {\n      staticClass: \"rule-link dropdown-item\",\n      \"class\": _vm.linkClassName,\n      attrs: {\n        \"href\": \"javascript:void(0)\"\n      },\n      on: {\n        \"click\": function click($event) {\n          return _vm.builder.addNewRule(_vm.ruleType);\n        }\n      }\n    }, [_vm._v(_vm._s(_vm.title))]);\n  },\n  staticRenderFns: [],\n  props: {\n    ruleType: {\n      type: String,\n      required: true\n    },\n    builder: {\n      required: true\n    }\n  },\n  computed: {\n    linkClassName: function linkClassName() {\n      return \"rule-link-\" + this.ruleType.replace(/_/g, \"-\");\n    },\n    title: function title() {\n      return RULES[this.ruleType].title;\n    }\n  }\n};\nvar RuleComponent = {\n  render: function render() {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return _vm.ruleType == _vm.displayRuleType ? _c('div', {\n      staticClass: \"rule-editor\",\n      \"class\": _vm.typeToClass\n    }, [_vm._t(\"default\"), _vm._v(\" \"), _c('div', {\n      staticClass: \"buttons rule-edit-buttons d-flex justify-content-end\"\n    }, [_c('button', {\n      staticClass: \"btn rule-editor-cancel mr-1\",\n      attrs: {\n        \"type\": \"button\"\n      },\n      on: {\n        \"click\": _vm.cancel\n      }\n    }, [_vm._v(_vm._s(_vm.cancelLabel))]), _vm._v(\" \"), _c('button', {\n      staticClass: \"btn btn-primary rule-editor-ok\",\n      attrs: {\n        \"type\": \"button\"\n      },\n      on: {\n        \"click\": _vm.okay\n      }\n    }, [_vm._v(_vm._s(_vm.applyLabel))])])], 2) : _vm._e();\n  },\n  staticRenderFns: [],\n  data: function data() {\n    return {\n      applyLabel: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Apply\"),\n      cancelLabel: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Cancel\")\n    };\n  },\n  props: {\n    ruleType: {\n      type: String,\n      required: true\n    },\n    displayRuleType: {\n      required: true\n    },\n    builder: {\n      required: true\n    }\n  },\n  methods: {\n    cancel: function cancel() {\n      this.builder.displayRuleType = null;\n    },\n    okay: function okay() {\n      this.builder.handleRuleSave(this.ruleType);\n      this.cancel();\n    }\n  },\n  computed: {\n    typeToClass: function typeToClass() {\n      return \"rule-edit-\" + this.ruleType.replace(/_/g, \"-\");\n    }\n  }\n};\nvar StateDiv = {\n  render: function render() {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return _c('div', {\n      staticClass: \"rule-collection-creator collection-creator flex-row-container\"\n    }, [_vm._t(\"default\")], 2);\n  },\n  staticRenderFns: []\n};\nvar RuleModalHeader = {\n  render: function render() {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return _c('div', {\n      staticClass: \"header flex-row no-flex\"\n    }, [_vm._t(\"default\")], 2);\n  },\n  staticRenderFns: []\n};\nvar RuleModalMiddle = {\n  render: function render() {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return _c('div', {\n      staticClass: \"middle flex-row flex-row-container\"\n    }, [_vm._t(\"default\")], 2);\n  },\n  staticRenderFns: []\n};\nvar RuleModalFooter = {\n  render: function render() {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return _c('div', {\n      staticClass: \"rule-footer footer flex-row no-flex\"\n    }, [_vm._t(\"inputs\"), _vm._v(\" \"), _c('div', {\n      staticClass: \"actions clear vertically-spaced\"\n    }, [_c('div', {\n      staticClass: \"main-options float-right\"\n    }, [_vm._t(\"default\")], 2)])], 2);\n  },\n  staticRenderFns: []\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    var orientation = \"vertical\";\n    var mapping;\n    var rules;\n\n    if (this.initialRules) {\n      mapping = this.initialRules.mapping.slice();\n      rules = this.initialRules.rules.slice();\n    } else {\n      if (this.elementsType == \"ftp\") {\n        mapping = [{\n          type: \"ftp_path\",\n          columns: [0]\n        }];\n      } else if (this.elementsType == \"datasets\") {\n        mapping = [{\n          type: \"list_identifiers\",\n          columns: [1]\n        }];\n      } else {\n        mapping = [];\n      }\n\n      rules = [];\n\n      if (this.elementsType == \"collection_contents\") {\n        if (this.initialElements !== null) {\n          var collectionType = this.initialElements.collection_type;\n          var collectionTypeRanks = collectionType.split(\":\");\n\n          for (var index in collectionTypeRanks) {\n            rules.push({\n              type: \"add_column_metadata\",\n              value: \"identifier\" + index\n            });\n          }\n        } else {\n          orientation = \"horizontal\"; // just assume a list is given by default.\n\n          rules.push({\n            type: \"add_column_metadata\",\n            value: \"identifier0\"\n          });\n        }\n      } else if (this.elementsType == \"datasets\") {\n        rules.push({\n          type: \"add_column_metadata\",\n          value: \"hid\"\n        }, {\n          type: \"add_column_metadata\",\n          value: \"name\"\n        });\n      } else if (this.elementsType == \"library_datasets\") {\n        rules.push({\n          type: \"add_column_metadata\",\n          value: \"name\"\n        });\n      } else if (this.elementsType == \"ftp\") {\n        rules.push({\n          type: \"add_column_metadata\",\n          value: \"path\"\n        });\n      }\n    }\n\n    return {\n      rules: rules,\n      mapping: mapping,\n      state: \"build\",\n      // 'build', 'error', 'wait',\n      ruleView: \"normal\",\n      // 'normal' or 'source'\n      ruleSource: \"\",\n      ruleSourceJson: null,\n      ruleSourceError: null,\n      errorMessage: \"\",\n      jaggedData: false,\n      waitingJobState: \"new\",\n      titleReset: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Undo all reordering and discards\"),\n      titleNumericSort: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"By default columns will be sorted lexicographically, check this option if the columns are numeric values and should be sorted as numbers\"),\n      titleInvertFilterRegex: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Remove rows not matching the specified regular expression at specified column\"),\n      titleInvertFilterEmpty: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Remove rows that have non-empty values at specified column\"),\n      titleInvertFilterMatches: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Remove rows not matching supplied value\"),\n      titleViewSource: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Advanced Option: View and or edit the JSON representation of the rules to apply to this tabular data\"),\n      titleSourceCancel: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Stop editing rules and dismiss changes\"),\n      titleSourceReset: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Reset text area to current set of rules\"),\n      titleSourceApply: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Apply changes to rule source and return to rule preview\"),\n      titleRulesMenu: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"General rules to apply\"),\n      titleFilterMenu: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Rules that filter rows from the data\"),\n      titleColumMenu: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Rules that generate new columns\"),\n      titleRemoveMapping: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Remove column definition assignment\"),\n      titleApplyColumnDefinitions: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Apply these column definitions and return to rules preview\"),\n      titleErrorOkay: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Dismiss this error and return to the rule builder to try again with new rules\"),\n      namePlaceholder: utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Enter a name for your new collection\"),\n      activeRuleIndex: null,\n      addColumnRegexTarget: 0,\n      addColumnBasenameTarget: 0,\n      addColumnRegexExpression: \"\",\n      addColumnRegexReplacement: null,\n      addColumnRegexGroupCount: null,\n      addColumnRegexType: \"global\",\n      addColumnMetadataValue: 0,\n      addColumnGroupTagValueValue: \"\",\n      addColumnGroupTagValueDefault: \"\",\n      addColumnConcatenateTarget0: 0,\n      addColumnConcatenateTarget1: 0,\n      addColumnRownumStart: 1,\n      addColumnSubstrTarget: 0,\n      addColumnSubstrType: \"keep_prefix\",\n      addColumnSubstrLength: 1,\n      addColumnValue: \"\",\n      removeColumnTargets: [],\n      addFilterRegexTarget: 0,\n      addFilterRegexExpression: \"\",\n      addFilterRegexInvert: false,\n      addFilterMatchesTarget: 0,\n      addFilterMatchesValue: \"\",\n      addFilterMatchesInvert: false,\n      addFilterEmptyTarget: 0,\n      addFilterEmptyInvert: false,\n      addFilterCompareTarget: 0,\n      addFilterCompareValue: 0,\n      addFilterCompareType: \"less_than\",\n      addFilterCountN: 1,\n      addFilterCountInvert: false,\n      addFilterCountWhich: \"first\",\n      addSortingTarget: 0,\n      addSortingNumeric: false,\n      splitColumnsTargets0: [],\n      splitColumnsTargets1: [],\n      swapColumnsTarget0: 0,\n      swapColumnsTarget1: 0,\n      collectionName: \"\",\n      displayRuleType: null,\n      extensions: [],\n      extension: null,\n      genomes: [],\n      genome: null,\n      hideSourceItems: this.defaultHideSourceItems,\n      addNameTag: false,\n      orientation: orientation\n    };\n  },\n  props: {\n    initialElements: {\n      required: true\n    },\n    importType: {\n      type: String,\n      required: false,\n      \"default\": \"collections\"\n    },\n    elementsType: {\n      type: String,\n      required: false,\n      \"default\": \"datasets\"\n    },\n    // required if elementsType is \"datasets\" - hook into Backbone code for creating\n    // collections from HDAs, etc...\n    creationFn: {\n      required: false,\n      type: Function\n    },\n    // required if elementsType is \"collection_contents\" - hook into tool form to update\n    // rule parameter\n    saveRulesFn: {\n      required: false,\n      type: Function\n    },\n    initialRules: {\n      required: false,\n      type: Object\n    },\n    defaultHideSourceItems: {\n      type: Boolean,\n      required: false,\n      \"default\": true\n    },\n    // Callbacks sent in by modal code.\n    oncancel: {\n      required: true,\n      type: Function\n    },\n    oncreate: {\n      required: true,\n      type: Function\n    },\n    ftpUploadSite: {\n      type: String,\n      required: false,\n      \"default\": null\n    }\n  },\n  computed: {\n    exisistingDatasets: function exisistingDatasets() {\n      var elementsType = this.elementsType;\n      return elementsType === \"datasets\" || elementsType === \"collection_contents\" || elementsType === \"library_datasets\";\n    },\n    showFileTypeSelector: function showFileTypeSelector() {\n      return !this.exisistingDatasets && !this.mappingAsDict.file_type;\n    },\n    showGenomeSelector: function showGenomeSelector() {\n      return !this.exisistingDatasets && !this.mappingAsDict.dbkey;\n    },\n    showCollectionNameInput: function showCollectionNameInput() {\n      return this.importType == \"collections\" && this.elementsType != \"collection_contents\" && !this.mappingAsDict.collection_name;\n    },\n    showAddNameTag: function showAddNameTag() {\n      return this.importType == \"collections\" && this.elementsType != \"collection_contents\";\n    },\n    titleFinish: function titleFinish() {\n      if (this.elementsType == \"datasets\" || this.elementsType == \"library_datasets\") {\n        return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Create new collection from specified rules and datasets\");\n      } else if (this.elementsType == \"collection_contents\") {\n        return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Save rules and return to tool form\");\n      } else {\n        return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Upload collection using specified rules\");\n      }\n    },\n    titleCancel: function titleCancel() {\n      if (this.importType == \"datasets\") {\n        return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Close this modal and do not upload any datasets\");\n      } else {\n        return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Close this modal and do not create any collections\");\n      }\n    },\n    finishButtonTitle: function finishButtonTitle() {\n      if (this.elementsType == \"datasets\" || this.elementsType == \"library_datasets\") {\n        return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Create\");\n      } else if (this.elementsType == \"collection_contents\") {\n        return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Save\");\n      } else {\n        return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Upload\");\n      }\n    },\n    hasActiveMappingEdit: function hasActiveMappingEdit() {\n      var has = underscore__WEBPACK_IMPORTED_MODULE_1___default.a.any(underscore__WEBPACK_IMPORTED_MODULE_1___default.a.values(this.mapping), function (mapping) {\n        return mapping.editing;\n      });\n\n      return has;\n    },\n    activeRule: function activeRule() {\n      return this.activeRuleIndex !== null && this.rules[this.activeRuleIndex];\n    },\n    activeRuleColHeaders: function activeRuleColHeaders() {\n      var rulesHeaders = this.activeRuleIndex !== null && this.colHeadersPerRule[this.activeRuleIndex];\n      return rulesHeaders || this.colHeaders;\n    },\n    horizontal: function horizontal() {\n      return this.orientation == \"horizontal\";\n    },\n    vertical: function vertical() {\n      return this.orientation == \"vertical\";\n    },\n    mappedTargets: function mappedTargets() {\n      var targets = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.mapping[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var mapping = _step.value;\n          targets.push(mapping.type);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return targets;\n    },\n    unmappedTargets: function unmappedTargets() {\n      var targets = [];\n      var mappedTargets = this.mappedTargets;\n\n      for (var target in MAPPING_TARGETS) {\n        var targetModes = MAPPING_TARGETS[target].modes;\n\n        if (targetModes && targetModes.indexOf(this.elementsType) < 0) {\n          continue;\n        }\n\n        var targetDefinition = MAPPING_TARGETS[target];\n        var targetImportType = targetDefinition.importType;\n\n        if (targetImportType && this.importType != targetImportType) {\n          continue;\n        }\n\n        if (!this.ftpUploadSite && targetDefinition.requiresFtp) {\n          continue;\n        }\n\n        if (mappedTargets.indexOf(target) < 0) {\n          targets.push(target);\n        }\n      }\n\n      return targets;\n    },\n    colHeaders: function colHeaders() {\n      var _this$hotData = this.hotData,\n          data = _this$hotData.data,\n          columns = _this$hotData.columns;\n      return mvc_rules_rule_definitions__WEBPACK_IMPORTED_MODULE_10__[\"default\"].colHeadersFor(data, columns);\n    },\n    colHeadersDisplay: function colHeadersDisplay() {\n      var formattedHeaders = [];\n\n      for (var colIndex in this.colHeaders) {\n        var colHeader = this.colHeaders[colIndex];\n        formattedHeaders[colIndex] = \"<b>\".concat(underscore__WEBPACK_IMPORTED_MODULE_1___default.a.escape(colHeader), \"</b>\");\n        var mappingDisplay = [];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this.mapping[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var mapping = _step2.value;\n\n            if (mapping.columns.indexOf(parseInt(colIndex)) !== -1) {\n              var mappingDef = MAPPING_TARGETS[mapping.type];\n              mappingDisplay.push(\"<i>\".concat(underscore__WEBPACK_IMPORTED_MODULE_1___default.a.escape(mappingDef.columnHeader || mappingDef.label), \"</i>\"));\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        if (mappingDisplay.length == 1) {\n          formattedHeaders[colIndex] += \" (\".concat(mappingDisplay[0], \")\");\n        } else if (mappingDisplay.length > 1) {\n          formattedHeaders[colIndex] += \" (\".concat([mappingDisplay.slice(0, -1).join(\", \"), mappingDisplay.slice(-1)[0]].join(\" & \"), \")\");\n        }\n      }\n\n      return formattedHeaders;\n    },\n    mappingAsDict: function mappingAsDict() {\n      var asDict = {};\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.mapping[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var mapping = _step3.value;\n          asDict[mapping.type] = mapping;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return asDict;\n    },\n    metadataOptions: function metadataOptions() {\n      var metadataOptions = {};\n\n      if (this.elementsType == \"collection_contents\") {\n        var collectionType;\n\n        if (this.initialElements) {\n          collectionType = this.initialElements.collection_type;\n        } else {\n          // give a bunch of different options if not constrained with given input\n          collectionType = \"list:list:list:paired\";\n        }\n\n        var collectionTypeRanks = collectionType.split(\":\");\n\n        for (var index in collectionTypeRanks) {\n          var collectionTypeRank = collectionTypeRanks[index];\n\n          if (collectionTypeRank == \"list\") {\n            // TODO: drop the numeral at the end if only flat list\n            metadataOptions[\"identifier\" + index] = utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"List Identifier \") + (parseInt(index) + 1);\n          } else {\n            metadataOptions[\"identifier\" + index] = utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Paired Identifier\");\n          }\n        }\n\n        metadataOptions[\"tags\"] = utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Tags\");\n      } else if (this.elementsType == \"ftp\") {\n        metadataOptions[\"path\"] = utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Path\");\n      } else if (this.elementsType == \"library_datasets\") {\n        metadataOptions[\"name\"] = utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Name\");\n      } else if (this.elementsType == \"datasets\") {\n        metadataOptions[\"hid\"] = utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"History ID (hid)\");\n        metadataOptions[\"name\"] = utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(\"Name\");\n      } else {\n        metadataOptions = null;\n      }\n\n      return metadataOptions;\n    },\n    hasTagsMetadata: function hasTagsMetadata() {\n      // TODO: allow for dataset, library_datasets also - here and just above in metadataOptions.\n      return this.elementsType == \"collection_contents\";\n    },\n    collectionType: function collectionType() {\n      var identifierColumns = [];\n\n      if (this.mappingAsDict.list_identifiers) {\n        identifierColumns = this.mappingAsDict.list_identifiers.columns;\n      }\n\n      var collectionType = identifierColumns.map(function (col) {\n        return \"list\";\n      }).join(\":\");\n\n      if (this.mappingAsDict.paired_identifier) {\n        if (collectionType) {\n          collectionType += \":paired\";\n        } else {\n          collectionType = \"paired\";\n        }\n      }\n\n      return collectionType;\n    },\n    validInput: function validInput() {\n      var identifierColumns = this.identifierColumns();\n      var mappingAsDict = this.mappingAsDict;\n      var buildingCollection = this.importType == \"collections\";\n      var requiresName = buildingCollection && this.elementsType != \"collection_contents\" && !mappingAsDict.collection_name;\n      var valid = true;\n\n      if (requiresName) {\n        valid = this.collectionName.length > 0;\n      }\n\n      if (mappingAsDict.ftp_path && mappingAsDict.url) {\n        // Can only specify one of these.\n        valid = false;\n      }\n\n      var requiresSourceColumn = this.elementsType == \"ftp\" || this.elementsType == \"raw\";\n\n      if (requiresSourceColumn && !mappingAsDict.ftp_path && !mappingAsDict.url) {\n        valid = false;\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.rules[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var rule = _step4.value;\n\n          if (rule.error) {\n            valid = false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      if (buildingCollection && identifierColumns.length == 0) {\n        valid = false;\n      }\n\n      return valid;\n    },\n    hotData: function hotData() {\n      var data;\n      var sources;\n      var columns;\n\n      if (this.elementsType == \"datasets\" || this.elementsType == \"library_datasets\" || this.elementsType == \"ftp\") {\n        sources = this.initialElements.slice();\n        data = sources.map(function (el) {\n          return [];\n        });\n        columns = [];\n      } else if (this.elementsType == \"collection_contents\") {\n        var collection = this.initialElements;\n\n        if (collection) {\n          var obj = this.populateElementsFromCollectionDescription(collection.elements, collection.collection_type);\n          data = obj.data;\n          sources = obj.sources;\n          columns = [];\n        } else {\n          data = [];\n          sources = [];\n          columns = [];\n        }\n      } else {\n        data = this.initialElements.slice();\n        sources = data.map(function (el) {\n          return null;\n        });\n        columns = [];\n\n        if (this.initialElements) {\n          this.initialElements[0].forEach(function () {\n            return columns.push(\"new\");\n          });\n        }\n      }\n\n      return mvc_rules_rule_definitions__WEBPACK_IMPORTED_MODULE_10__[\"default\"].applyRules(data, sources, columns, this.rules);\n    },\n    colHeadersPerRule: function colHeadersPerRule() {\n      return this.hotData.colHeadersPerRule;\n    }\n  },\n  methods: {\n    l: function l(str) {\n      // _l conflicts private methods of Vue internals, expose as l instead\n      return utils_localization__WEBPACK_IMPORTED_MODULE_6___default()(str);\n    },\n    cancel: function cancel() {\n      this.oncancel();\n    },\n    mappingTargets: function mappingTargets() {\n      return MAPPING_TARGETS;\n    },\n    resetRules: function resetRules() {\n      this.rules.splice(0, this.rules.length);\n      this.mapping.splice(0, this.mapping.length);\n    },\n    resetRulesAndState: function resetRulesAndState() {\n      this.resetRules();\n      this.state = \"build\";\n      this.errorMessage = \"\";\n      this.collectionName = \"\";\n    },\n    addNewRule: function addNewRule(ruleType) {\n      RULES[ruleType].init(this);\n      this.displayRuleType = ruleType;\n      this.activeRuleIndex = null;\n    },\n    handleRuleSave: function handleRuleSave(ruleType) {\n      var rule = this.activeRule;\n\n      if (rule) {\n        RULES[ruleType].save(this, rule);\n      } else {\n        var _rule = {\n          type: ruleType\n        };\n        RULES[ruleType].save(this, _rule);\n        this.rules.push(_rule);\n      }\n    },\n    viewSource: function viewSource() {\n      this.resetSource();\n      this.ruleView = \"source\";\n    },\n    resetSource: function resetSource() {\n      var replacer = function replacer(key, value) {\n        if (key == \"error\" || key == \"warn\") {\n          return undefined;\n        }\n\n        return value;\n      };\n\n      var asJson = {\n        rules: this.rules,\n        mapping: this.mapping\n      };\n\n      if (!this.exisistingDatasets) {\n        if (this.extension !== mvc_upload_upload_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].DEFAULT_EXTENSION) {\n          asJson.extension = this.extension;\n        }\n\n        if (this.genome !== mvc_upload_upload_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].DEFAULT_GENOME) {\n          asJson.genome = this.genome;\n        }\n      }\n\n      this.ruleSourceJson = asJson;\n      this.ruleSource = JSON.stringify(asJson, replacer, \"  \");\n      this.ruleSourceError = null;\n    },\n    attemptRulePreview: function attemptRulePreview() {\n      // Leave source mode if rules are valid and view.\n      this.ruleSourceError = null;\n      var asJson;\n\n      try {\n        asJson = JSON.parse(this.ruleSource);\n      } catch (error) {\n        this.ruleSourceError = \"Problem parsing your rules.\";\n        return;\n      }\n\n      this.updateFromSource(asJson);\n      this.ruleView = \"normal\";\n    },\n    cancelSourceEdit: function cancelSourceEdit() {\n      this.ruleSourceError = null;\n      this.ruleView = \"normal\";\n    },\n    updateFromSource: function updateFromSource(asJson) {\n      this.resetRules();\n\n      if (asJson.extension) {\n        this.extension = asJson.extension;\n      }\n\n      if (asJson.genome) {\n        this.genome = asJson.genome;\n      }\n\n      if (asJson.rules) {\n        this.rules = asJson.rules;\n      }\n\n      if (asJson.mapping) {\n        this.mapping = asJson.mapping;\n      }\n    },\n    addIdentifier: function addIdentifier(identifier) {\n      var multiple = this.mappingTargets()[identifier].multiple; // If multiple selection, pop open a new column selector in edit mode.\n\n      var initialColumns = multiple ? [] : [0];\n      this.mapping.push({\n        type: identifier,\n        columns: initialColumns,\n        editing: multiple\n      });\n    },\n    editRule: function editRule(rule, index) {\n      var ruleType = rule.type;\n      this.activeRuleIndex = index;\n      RULES[ruleType].init(this, rule);\n      this.displayRuleType = ruleType;\n    },\n    removeRule: function removeRule(index) {\n      this.rules.splice(index, 1);\n    },\n    removeMapping: function removeMapping(index) {\n      this.mapping.splice(index, 1);\n    },\n    refreshAndWait: function refreshAndWait(response) {\n      var Galaxy = Object(app__WEBPACK_IMPORTED_MODULE_3__[\"getGalaxyInstance\"])();\n\n      if (Galaxy && Galaxy.currHistoryPanel) {\n        Galaxy.currHistoryPanel.refreshContents();\n      }\n\n      this.waitOnJob(response);\n    },\n    waitOnJob: function waitOnJob(response) {\n      var _this = this;\n\n      var jobId = response.data.jobs[0].id;\n\n      var handleJobShow = function handleJobShow(jobResponse) {\n        var state = jobResponse.data.state;\n        _this.waitingJobState = state;\n\n        if (mvc_history_job_states_model__WEBPACK_IMPORTED_MODULE_9__[\"default\"].NON_TERMINAL_STATES.indexOf(state) !== -1) {\n          setTimeout(doJobCheck, 1000);\n        } else if (mvc_history_job_states_model__WEBPACK_IMPORTED_MODULE_9__[\"default\"].ERROR_STATES.indexOf(state) !== -1) {\n          _this.state = \"error\";\n          _this.errorMessage = \"Unknown error encountered while running your upload job, this could be a server issue or a problem with the upload definition.\";\n\n          _this.doFullJobCheck(jobId);\n        } else {\n          var Galaxy = Object(app__WEBPACK_IMPORTED_MODULE_3__[\"getGalaxyInstance\"])();\n          var history = Galaxy && Galaxy.currHistoryPanel && Galaxy.currHistoryPanel.model;\n          history.refresh();\n\n          _this.oncreate();\n        }\n      };\n\n      var doJobCheck = function doJobCheck() {\n        axios__WEBPACK_IMPORTED_MODULE_5___default.a.get(\"\".concat(Object(onload_loadConfig__WEBPACK_IMPORTED_MODULE_2__[\"getAppRoot\"])(), \"api/jobs/\").concat(jobId)).then(handleJobShow)[\"catch\"](_this.renderFetchError);\n      };\n\n      setTimeout(doJobCheck, 1000);\n    },\n    doFullJobCheck: function doFullJobCheck(jobId) {\n      var _this2 = this;\n\n      var handleJobShow = function handleJobShow(jobResponse) {\n        var stderr = jobResponse.data.stderr;\n\n        if (stderr) {\n          var errorMessage = \"An error was encountered while running your upload job. \";\n\n          if (stderr.indexOf(\"binary file contains inappropriate content\") > -1) {\n            errorMessage += \"The problem may be that the batch uploader will not automatically decompress your files the way the normal uploader does, please specify a correct extension or upload decompressed data.\";\n          }\n\n          errorMessage += \"Upload job completed with standard error: \" + stderr;\n          _this2.errorMessage = errorMessage;\n        }\n      };\n\n      axios__WEBPACK_IMPORTED_MODULE_5___default.a.get(\"\".concat(Object(onload_loadConfig__WEBPACK_IMPORTED_MODULE_2__[\"getAppRoot\"])(), \"api/jobs/\").concat(jobId, \"?full=True\")).then(handleJobShow)[\"catch\"](this.renderFetchError);\n    },\n    renderFetchError: function renderFetchError(error) {\n      this.state = \"error\";\n\n      if (error.response) {\n        console.log(error.response);\n        this.errorMessage = error.response.data.err_msg;\n      } else {\n        console.log(error);\n        this.errorMessage = \"Unknown error encountered: \" + error;\n      }\n    },\n    swapOrientation: function swapOrientation() {\n      this.orientation = this.orientation == \"horizontal\" ? \"vertical\" : \"horizontal\";\n      var hotTable = this.$refs.hotTable.table;\n\n      if (this.orientation == \"horizontal\") {\n        this.$nextTick(function () {\n          var fullWidth = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\".rule-builder-body\").width();\n          hotTable.updateSettings({\n            width: fullWidth\n          });\n        });\n      } else {\n        this.$nextTick(function () {\n          var fullWidth = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\".rule-builder-body\").width();\n          hotTable.updateSettings({\n            width: fullWidth - 270\n          });\n        });\n      }\n    },\n    createCollection: function createCollection() {\n      var _this3 = this;\n\n      this.state = \"wait\";\n      var name = this.collectionName;\n      var collectionType = this.collectionType;\n\n      if (this.elementsType == \"datasets\" || this.elementsType == \"library_datasets\") {\n        var elements = this.creationElementsFromDatasets();\n\n        if (this.state !== \"error\") {\n          new utils_ajax_queue__WEBPACK_IMPORTED_MODULE_4__[\"default\"].AjaxQueue(underscore__WEBPACK_IMPORTED_MODULE_1___default.a.map(elements, function (elements, name) {\n            return function () {\n              var response = _this3.creationFn(elements, collectionType, name, _this3.hideSourceItems);\n\n              return response;\n            };\n          })).done(this.oncreate).fail(this.renderFetchError);\n        }\n      } else if (this.elementsType == \"collection_contents\") {\n        this.resetSource();\n\n        if (this.state !== \"error\") {\n          this.saveRulesFn(this.ruleSourceJson);\n          this.oncreate();\n        }\n      } else {\n        var Galaxy = Object(app__WEBPACK_IMPORTED_MODULE_3__[\"getGalaxyInstance\"])();\n        var historyId = Galaxy.currHistoryPanel.model.id;\n\n        var _elements;\n\n        var targets;\n\n        if (collectionType) {\n          targets = [];\n          var elementsByCollectionName = this.creationElementsForFetch();\n\n          for (var collectionName in elementsByCollectionName) {\n            var target = {\n              destination: {\n                type: \"hdca\"\n              },\n              elements: elementsByCollectionName[collectionName],\n              collection_type: collectionType,\n              name: collectionName\n            };\n\n            if (this.addNameTag) {\n              target[\"tags\"] = [\"name:\" + collectionName];\n            }\n\n            targets.push(target);\n          }\n        } else {\n          _elements = this.creationDatasetsForFetch();\n          targets = [{\n            destination: {\n              type: \"hdas\"\n            },\n            elements: _elements,\n            name: name\n          }];\n        }\n\n        if (this.state !== \"error\") {\n          axios__WEBPACK_IMPORTED_MODULE_5___default.a.post(\"\".concat(Object(onload_loadConfig__WEBPACK_IMPORTED_MODULE_2__[\"getAppRoot\"])(), \"api/tools/fetch\"), {\n            history_id: historyId,\n            targets: targets,\n            auto_decompress: true\n          }).then(this.refreshAndWait)[\"catch\"](this.renderFetchError);\n        }\n      }\n    },\n    identifierColumns: function identifierColumns() {\n      var mappingAsDict = this.mappingAsDict;\n      var identifierColumns = [];\n\n      if (mappingAsDict.list_identifiers) {\n        identifierColumns = mappingAsDict.list_identifiers.columns.slice();\n      }\n\n      if (this.mappingAsDict.paired_identifier) {\n        identifierColumns.push(this.mappingAsDict.paired_identifier.columns[0]);\n      }\n\n      return identifierColumns;\n    },\n    buildRequestElements: function buildRequestElements(createDatasetDescription, createSubcollectionDescription, subElementProp) {\n      var data = this.hotData.data;\n      var identifierColumns = this.identifierColumns();\n\n      if (identifierColumns.length < 1) {\n        console.log(\"Error but this shouldn't have happened, create button should have been disabled.\");\n        return;\n      }\n\n      var numIdentifierColumns = identifierColumns.length;\n      var collectionType = this.collectionType;\n      var elementsByName = {};\n      var dataByCollection = {};\n      var collectionNameMap = this.mappingAsDict.collection_name;\n\n      if (collectionNameMap) {\n        var collectionNameTarget = collectionNameMap.columns[0];\n\n        for (var dataIndex in data) {\n          var row = data[dataIndex];\n          var name = row[collectionNameTarget];\n\n          if (!dataByCollection[name]) {\n            dataByCollection[name] = {};\n          }\n\n          dataByCollection[name][dataIndex] = row;\n        }\n      } else {\n        // use global collection name from the form.\n        dataByCollection[this.collectionName] = data;\n      }\n\n      for (var collectionName in dataByCollection) {\n        var elements = [];\n        var identifiers = [];\n\n        for (var _dataIndex in dataByCollection[collectionName]) {\n          var rowData = data[_dataIndex]; // For each row, find place in depth for this element.\n\n          var collectionTypeAtDepth = collectionType;\n          var elementsAtDepth = elements;\n          var identifiersAtDepth = identifiers;\n\n          for (var identifierColumnIndex = 0; identifierColumnIndex < numIdentifierColumns; identifierColumnIndex++) {\n            // typeof indicates identifier is a string, but the raw string value coming from this data\n            // structure sometimes does not work as expected with indexOf below, I don't understand why\n            // but as a result this cast here seems needed.\n            var identifier = String(rowData[identifierColumns[identifierColumnIndex]]);\n\n            if (identifierColumnIndex + 1 == numIdentifierColumns) {\n              // At correct final position in nested structure for this dataset.\n              if (collectionTypeAtDepth === \"paired\") {\n                if ([\"f\", \"1\", \"r1\", \"forward\"].indexOf(identifier.toLowerCase()) > -1) {\n                  identifier = \"forward\";\n                } else if ([\"r\", \"2\", \"r2\", \"reverse\"].indexOf(identifier.toLowerCase()) > -1) {\n                  identifier = \"reverse\";\n                } else {\n                  this.state = \"error\";\n                  this.errorMessage = \"Unknown indicator of paired status encountered - only values of F, R, 1, 2, R1, R2, forward, or reverse are allowed.\";\n                  return;\n                }\n              }\n\n              var element = createDatasetDescription(_dataIndex, identifier);\n              elementsAtDepth.push(element);\n\n              if (identifiersAtDepth.indexOf(identifier) >= 0) {\n                this.state = \"error\";\n                this.errorMessage = \"Duplicate identifiers detected, collection identifiers must be unique.\";\n                return;\n              }\n\n              identifiersAtDepth.push(identifier);\n            } else {\n              // Create nesting for this element.\n              collectionTypeAtDepth = collectionTypeAtDepth.split(\":\").slice(1).join(\":\");\n              var found = false;\n              var _iteratorNormalCompletion5 = true;\n              var _didIteratorError5 = false;\n              var _iteratorError5 = undefined;\n\n              try {\n                for (var _iterator5 = elementsAtDepth[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                  var _element = _step5.value;\n\n                  if (_element[\"name\"] == identifier) {\n                    elementsAtDepth = _element[subElementProp];\n                    identifiersAtDepth = identifiersAtDepth[identifier];\n                    found = true;\n                    break;\n                  }\n                }\n              } catch (err) {\n                _didIteratorError5 = true;\n                _iteratorError5 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n                    _iterator5[\"return\"]();\n                  }\n                } finally {\n                  if (_didIteratorError5) {\n                    throw _iteratorError5;\n                  }\n                }\n              }\n\n              if (!found) {\n                var subcollection = createSubcollectionDescription(identifier);\n                elementsAtDepth.push(subcollection);\n                identifiersAtDepth[identifier] = [];\n                var childCollectionElements = [];\n                subcollection[subElementProp] = childCollectionElements;\n                subcollection.collection_type = collectionTypeAtDepth;\n                elementsAtDepth = childCollectionElements;\n                identifiersAtDepth = identifiersAtDepth[identifier];\n              }\n            }\n          }\n        }\n\n        elementsByName[collectionName] = elements;\n      }\n\n      return elementsByName;\n    },\n    creationElementsFromDatasets: function creationElementsFromDatasets() {\n      var _this4 = this;\n\n      var _this$hotData2 = this.hotData,\n          sources = _this$hotData2.sources,\n          data = _this$hotData2.data;\n      var mappingAsDict = this.mappingAsDict;\n      var elementsByCollectionName = this.buildRequestElements(function (dataIndex, identifier) {\n        var source = sources[dataIndex];\n\n        var res = _this4._datasetFor(dataIndex, data, mappingAsDict);\n\n        var src = _this4.elementsType == \"datasets\" ? \"hda\" : \"ldda\";\n        return {\n          id: source[\"id\"],\n          name: identifier,\n          src: src,\n          tags: res.tags\n        };\n      }, function (identifier) {\n        return {\n          name: identifier,\n          src: \"new_collection\"\n        };\n      }, \"element_identifiers\");\n      return elementsByCollectionName;\n    },\n    creationElementsForFetch: function creationElementsForFetch() {\n      var _this5 = this;\n\n      // fetch elements for HDCA\n      var data = this.hotData.data;\n      var mappingAsDict = this.mappingAsDict;\n      var elementsByCollectionName = this.buildRequestElements(function (dataIndex, identifier) {\n        var res = _this5._datasetFor(dataIndex, data, mappingAsDict);\n\n        res[\"name\"] = identifier;\n        return res;\n      }, function (identifier) {\n        return {\n          name: identifier\n        };\n      }, \"elements\");\n      return elementsByCollectionName;\n    },\n    creationDatasetsForFetch: function creationDatasetsForFetch() {\n      // fetch elements for HDAs if not collection information specified.\n      var data = this.hotData.data;\n      var mappingAsDict = this.mappingAsDict;\n      var datasets = [];\n\n      for (var dataIndex in data) {\n        var res = this._datasetFor(dataIndex, data, mappingAsDict);\n\n        datasets.push(res);\n      }\n\n      return datasets;\n    },\n    populateElementsFromCollectionDescription: function populateElementsFromCollectionDescription(elements, collectionType, parentIdentifiers_) {\n      var parentIdentifiers = parentIdentifiers_ ? parentIdentifiers_ : [];\n      var data = [];\n      var sources = [];\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = elements[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var element = _step6.value;\n          var elementObject = element.object;\n          var identifiers = parentIdentifiers.concat([element.element_identifier]);\n          var collectionTypeLevelSepIndex = collectionType.indexOf(\":\");\n\n          if (collectionTypeLevelSepIndex === -1) {\n            // Flat collection at this depth.\n            // sources are the elements\n            data.push([]);\n            var source = {\n              identifiers: identifiers,\n              dataset: elementObject,\n              tags: elementObject.tags\n            };\n            sources.push(source);\n          } else {\n            var restCollectionType = collectionType.slice(collectionTypeLevelSepIndex + 1);\n            var elementObj = this.populateElementsFromCollectionDescription(elementObject.elements, restCollectionType, identifiers);\n            var elementData = elementObj.data;\n            var elementSources = elementObj.sources;\n            data = data.concat(elementData);\n            sources = sources.concat(elementSources);\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n            _iterator6[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return {\n        data: data,\n        sources: sources\n      };\n    },\n    highlightColumn: function highlightColumn(n) {\n      var headerSelection = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\".htCore > thead > tr > th:nth-child(\".concat(n + 1, \")\"));\n      headerSelection.addClass(\"ht__highlight\");\n      var bodySelection = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\".htCore > tbody > tr > td:nth-child(\".concat(n + 1, \")\"));\n      bodySelection.addClass(\"rule-highlight\");\n    },\n    unhighlightColumn: function unhighlightColumn(n) {\n      var headerSelection = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\".htCore > thead > tr > th:nth-child(\".concat(n + 1, \")\"));\n      headerSelection.removeClass(\"ht__highlight\");\n      var bodySelection = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\".htCore > tbody > tr > td:nth-child(\".concat(n + 1, \")\"));\n      bodySelection.removeClass(\"rule-highlight\");\n    },\n    _datasetFor: function _datasetFor(dataIndex, data, mappingAsDict) {\n      var res = {};\n\n      if (mappingAsDict.url) {\n        var urlColumn = mappingAsDict.url.columns[0];\n        var url = data[dataIndex][urlColumn];\n\n        if (url.indexOf(\"://\") == -1) {\n          // special case columns containing SRA links. EBI serves these a lot\n          // faster over FTP.\n          if (url.indexOf(\"ftp.sra.\") !== -1) {\n            url = \"ftp://\" + url;\n          } else {\n            url = \"http://\" + url;\n          }\n        }\n\n        res[\"url\"] = url;\n        res[\"src\"] = \"url\";\n      } else if (mappingAsDict.ftp_path) {\n        var ftpPathColumn = mappingAsDict.ftp_path.columns[0];\n        var ftpPath = data[dataIndex][ftpPathColumn];\n        res[\"ftp_path\"] = ftpPath;\n        res[\"src\"] = \"ftp_import\";\n      }\n\n      if (mappingAsDict.dbkey) {\n        var dbkeyColumn = mappingAsDict.dbkey.columns[0];\n        var dbkey = data[dataIndex][dbkeyColumn];\n        res[\"dbkey\"] = dbkey;\n      } else if (this.genome) {\n        res[\"dbkey\"] = this.genome;\n      }\n\n      if (mappingAsDict.file_type) {\n        var fileTypeColumn = mappingAsDict.file_type.columns[0];\n        var fileType = data[dataIndex][fileTypeColumn];\n        res[\"ext\"] = fileType;\n      } else if (this.extension) {\n        res[\"ext\"] = this.extension;\n      }\n\n      if (mappingAsDict.name) {\n        var nameColumn = mappingAsDict.name.columns[0];\n        var name = data[dataIndex][nameColumn];\n        res[\"name\"] = name;\n      }\n\n      if (mappingAsDict.info) {\n        var infoColumn = mappingAsDict.info.columns[0];\n        var info = data[dataIndex][infoColumn];\n        res[\"info\"] = info;\n      }\n\n      var tags = [];\n\n      if (mappingAsDict.tags) {\n        var tagColumns = mappingAsDict.tags.columns;\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n          for (var _iterator7 = tagColumns[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n            var tagColumn = _step7.value;\n            var tag = data[dataIndex][tagColumn];\n            tags.push(tag);\n          }\n        } catch (err) {\n          _didIteratorError7 = true;\n          _iteratorError7 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n              _iterator7[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError7) {\n              throw _iteratorError7;\n            }\n          }\n        }\n      }\n\n      if (mappingAsDict.group_tags) {\n        var groupTagColumns = mappingAsDict.group_tags.columns;\n        var _iteratorNormalCompletion8 = true;\n        var _didIteratorError8 = false;\n        var _iteratorError8 = undefined;\n\n        try {\n          for (var _iterator8 = groupTagColumns[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n            var groupTagColumn = _step8.value;\n            var _tag = data[dataIndex][groupTagColumn];\n            tags.push(\"group:\" + _tag);\n          }\n        } catch (err) {\n          _didIteratorError8 = true;\n          _iteratorError8 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n              _iterator8[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError8) {\n              throw _iteratorError8;\n            }\n          }\n        }\n      }\n\n      if (mappingAsDict.name_tag) {\n        var nameTagColumn = mappingAsDict.name_tag.columns[0];\n        var nameTag = data[dataIndex][nameTagColumn];\n        tags.push(\"name:\" + nameTag);\n      }\n\n      if (tags.length > 0) {\n        res[\"tags\"] = tags;\n      }\n\n      return res;\n    }\n  },\n  created: function created() {\n    var _this6 = this;\n\n    if (this.elementsType !== \"collection_contents\") {\n      var columnCount = null;\n\n      if (this.elementsType == \"datasets\") {\n        var _iteratorNormalCompletion9 = true;\n        var _didIteratorError9 = false;\n        var _iteratorError9 = undefined;\n\n        try {\n          for (var _iterator9 = this.initialElements[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n            var element = _step9.value;\n\n            if (element.history_content_type == \"dataset_collection\") {\n              this.errorMessage = \"This component can only be used with datasets, you have specified one or more collections.\";\n              this.state = \"error\";\n            }\n          }\n        } catch (err) {\n          _didIteratorError9 = true;\n          _iteratorError9 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion9 && _iterator9[\"return\"] != null) {\n              _iterator9[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError9) {\n              throw _iteratorError9;\n            }\n          }\n        }\n      } else {\n        var _iteratorNormalCompletion10 = true;\n        var _didIteratorError10 = false;\n        var _iteratorError10 = undefined;\n\n        try {\n          for (var _iterator10 = this.initialElements[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n            var row = _step10.value;\n\n            if (columnCount == null) {\n              columnCount = row.length;\n            } else {\n              if (columnCount != row.length) {\n                this.jaggedData = true;\n                break;\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError10 = true;\n          _iteratorError10 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion10 && _iterator10[\"return\"] != null) {\n              _iterator10[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError10) {\n              throw _iteratorError10;\n            }\n          }\n        }\n      }\n\n      mvc_upload_upload_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].getUploadDatatypes(function (extensions) {\n        _this6.extensions = extensions;\n        _this6.extension = mvc_upload_upload_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].DEFAULT_EXTENSION;\n      }, false, mvc_upload_upload_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].AUTO_EXTENSION);\n      mvc_upload_upload_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].getUploadGenomes(function (genomes) {\n        _this6.genomes = genomes;\n        _this6.genome = mvc_upload_upload_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].DEFAULT_GENOME;\n      }, mvc_upload_upload_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].DEFAULT_GENOME);\n    }\n  },\n  watch: {\n    addColumnRegexType: function addColumnRegexType(val) {\n      if (val == \"groups\") {\n        this.addColumnRegexGroupCount = 1;\n      }\n\n      if (val == \"replacement\") {\n        this.addColumnRegexReplacement = \"\\0\";\n      }\n    }\n  },\n  components: {\n    HotTable: _handsontable_vue__WEBPACK_IMPORTED_MODULE_7___default.a,\n    RuleComponent: RuleComponent,\n    RuleTargetComponent: RuleTargetComponent,\n    RuleDisplay: RuleDisplay,\n    IdentifierDisplay: IdentifierDisplay,\n    ColumnSelector: ColumnSelector,\n    RegularExpressionInput: RegularExpressionInput,\n    StateDiv: StateDiv,\n    RuleModalHeader: RuleModalHeader,\n    RuleModalMiddle: RuleModalMiddle,\n    RuleModalFooter: RuleModalFooter,\n    Select2: components_Select2__WEBPACK_IMPORTED_MODULE_13__[\"default\"]\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./node_modules/mini-css-extract-plugin/dist/loader.js?!./node_modules/css-loader/dist/cjs.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=style&index=1&lang=css&":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-0!./node_modules/css-loader/dist/cjs.js??ref--7-1!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--7-2!./node_modules/sass-loader/dist/cjs.js??ref--7-3!./node_modules/vue-loader/lib??vue-loader-options!./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=style&index=1&lang=css& ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanM/IS4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8hLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanM/IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPyEuL2dhbGF4eS9zY3JpcHRzL2NvbXBvbmVudHMvUnVsZUNvbGxlY3Rpb25CdWlsZGVyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0xJmxhbmc9Y3NzJi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2dhbGF4eS9zY3JpcHRzL2NvbXBvbmVudHMvUnVsZUNvbGxlY3Rpb25CdWlsZGVyLnZ1ZT8zZjU4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mini-css-extract-plugin/dist/loader.js?!./node_modules/css-loader/dist/cjs.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=style&index=1&lang=css&\n");

/***/ }),

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!**************************************************!*\
  !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/moment/locale sync recursive ^\\.\\/.*$\n");

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=template&id=61c51560&":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=template&id=61c51560& ***!
  \**************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.state == \"build\"\n    ? _c(\n        \"state-div\",\n        [\n          _vm.ruleView == \"source\"\n            ? _c(\"rule-modal-header\", [\n                _vm._v(\n                  \"\\n        Below is a raw JSON description of the rules to apply to the tabular data. This is an advanced setting.\\n    \"\n                )\n              ])\n            : _vm.elementsType == \"datasets\" ||\n              _vm.elementsType == \"library_datasets\"\n            ? _c(\"rule-modal-header\", [\n                _vm._v(\n                  \"\\n        Use this form to describe rules for building collection(s) from the specified datasets.\\n        \"\n                ),\n                _c(\"b\", [\n                  _vm._v(\n                    \"Be sure to specify at least one column as a list identifier\"\n                  )\n                ]),\n                _vm._v(\n                  ' - specify more to created nested list\\n        structures. Specify a column to serve as \"collection name\" to group datasets into multiple collections.\\n    '\n                )\n              ])\n            : _vm.importType == \"datasets\"\n            ? _c(\"rule-modal-header\", [\n                _vm._v(\n                  \"\\n        Use this form to describe rules for import datasets. At least one column should be defined to a source to\\n        fetch data from (URLs, FTP files, etc...).\\n    \"\n                )\n              ])\n            : _c(\"rule-modal-header\", [\n                _vm._v(\n                  \"\\n        Use this form to describe rules for import datasets. At least one column should be defined to a source to\\n        fetch data from (URLs, FTP files, etc...).\\n        \"\n                ),\n                _c(\"b\", [\n                  _vm._v(\n                    \"Be sure to specify at least one column as a list identifier\"\n                  )\n                ]),\n                _vm._v(\n                  ' - specify more to created nested list\\n        structures. Specify a column to serve as \"collection name\" to group datasets into multiple collections.\\n    '\n                )\n              ]),\n          _vm._v(\" \"),\n          _vm.ruleView == \"source\"\n            ? _c(\"rule-modal-middle\", [\n                _vm.ruleSourceError\n                  ? _c(\"p\", { staticClass: \"errormessagelarge\" }, [\n                      _vm._v(_vm._s(_vm.ruleSourceError))\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"textarea\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.ruleSource,\n                      expression: \"ruleSource\"\n                    }\n                  ],\n                  staticClass: \"rule-source\",\n                  domProps: { value: _vm.ruleSource },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.ruleSource = $event.target.value\n                    }\n                  }\n                })\n              ])\n            : _c(\"rule-modal-middle\", [\n                _vm.ruleView == \"normal\"\n                  ? _c(\n                      \"div\",\n                      {\n                        staticClass: \"rule-builder-body vertically-spaced\",\n                        class: { \"flex-column-container\": _vm.vertical }\n                      },\n                      [\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"rule-column\",\n                            class: _vm.orientation\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"rules-container\",\n                                class: {\n                                  \"rules-container-vertical\":\n                                    _vm.initialElements && _vm.vertical,\n                                  \"rules-container-horizontal\":\n                                    _vm.initialElements && _vm.horizontal,\n                                  \"rules-container-full\":\n                                    _vm.initialElements == null\n                                }\n                              },\n                              [\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"sort\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.addSortingTarget,\n                                        \"col-headers\": _vm.activeRuleColHeaders\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.addSortingTarget = $event\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"label\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"b-tooltip\",\n                                            rawName: \"v-b-tooltip.hover\",\n                                            modifiers: { hover: true }\n                                          }\n                                        ],\n                                        attrs: { title: _vm.titleNumericSort }\n                                      },\n                                      [\n                                        _c(\"input\", {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.addSortingNumeric,\n                                              expression: \"addSortingNumeric\"\n                                            }\n                                          ],\n                                          attrs: { type: \"checkbox\" },\n                                          domProps: {\n                                            checked: Array.isArray(\n                                              _vm.addSortingNumeric\n                                            )\n                                              ? _vm._i(\n                                                  _vm.addSortingNumeric,\n                                                  null\n                                                ) > -1\n                                              : _vm.addSortingNumeric\n                                          },\n                                          on: {\n                                            change: function($event) {\n                                              var $$a = _vm.addSortingNumeric,\n                                                $$el = $event.target,\n                                                $$c = $$el.checked\n                                                  ? true\n                                                  : false\n                                              if (Array.isArray($$a)) {\n                                                var $$v = null,\n                                                  $$i = _vm._i($$a, $$v)\n                                                if ($$el.checked) {\n                                                  $$i < 0 &&\n                                                    (_vm.addSortingNumeric = $$a.concat(\n                                                      [$$v]\n                                                    ))\n                                                } else {\n                                                  $$i > -1 &&\n                                                    (_vm.addSortingNumeric = $$a\n                                                      .slice(0, $$i)\n                                                      .concat(\n                                                        $$a.slice($$i + 1)\n                                                      ))\n                                                }\n                                              } else {\n                                                _vm.addSortingNumeric = $$c\n                                              }\n                                            }\n                                          }\n                                        }),\n                                        _vm._v(\n                                          \" \" +\n                                            _vm._s(_vm.l(\"Numeric sorting.\")) +\n                                            \"\\n                        \"\n                                        )\n                                      ]\n                                    )\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"add_column_basename\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.addColumnBasenameTarget,\n                                        \"col-headers\": _vm.activeRuleColHeaders\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.addColumnBasenameTarget = $event\n                                        }\n                                      }\n                                    })\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"add_column_rownum\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"label\", [\n                                      _vm._v(\n                                        \"\\n                            \" +\n                                          _vm._s(_vm.l(\"Starting from\")) +\n                                          \" \"\n                                      ),\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: _vm.addColumnRownumStart,\n                                            expression: \"addColumnRownumStart\"\n                                          }\n                                        ],\n                                        attrs: { type: \"number\", min: \"0\" },\n                                        domProps: {\n                                          value: _vm.addColumnRownumStart\n                                        },\n                                        on: {\n                                          input: function($event) {\n                                            if ($event.target.composing) {\n                                              return\n                                            }\n                                            _vm.addColumnRownumStart =\n                                              $event.target.value\n                                          }\n                                        }\n                                      })\n                                    ])\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"add_column_metadata\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"label\", [\n                                      _vm._v(\n                                        \"\\n                            \" +\n                                          _vm._s(_vm.l(\"For\")) +\n                                          \"\\n                            \"\n                                      ),\n                                      _c(\n                                        \"select\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.addColumnMetadataValue,\n                                              expression:\n                                                \"addColumnMetadataValue\"\n                                            }\n                                          ],\n                                          on: {\n                                            change: function($event) {\n                                              var $$selectedVal = Array.prototype.filter\n                                                .call(\n                                                  $event.target.options,\n                                                  function(o) {\n                                                    return o.selected\n                                                  }\n                                                )\n                                                .map(function(o) {\n                                                  var val =\n                                                    \"_value\" in o\n                                                      ? o._value\n                                                      : o.value\n                                                  return val\n                                                })\n                                              _vm.addColumnMetadataValue = $event\n                                                .target.multiple\n                                                ? $$selectedVal\n                                                : $$selectedVal[0]\n                                            }\n                                          }\n                                        },\n                                        _vm._l(_vm.metadataOptions, function(\n                                          col,\n                                          index\n                                        ) {\n                                          return _c(\n                                            \"option\",\n                                            { domProps: { value: index } },\n                                            [_vm._v(_vm._s(col))]\n                                          )\n                                        }),\n                                        0\n                                      )\n                                    ])\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"add_column_group_tag_value\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"label\", [\n                                      _vm._v(\n                                        \"\\n                            \" +\n                                          _vm._s(_vm.l(\"Value\")) +\n                                          \" \"\n                                      ),\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value:\n                                              _vm.addColumnGroupTagValueValue,\n                                            expression:\n                                              \"addColumnGroupTagValueValue\"\n                                          }\n                                        ],\n                                        attrs: { type: \"text\" },\n                                        domProps: {\n                                          value: _vm.addColumnGroupTagValueValue\n                                        },\n                                        on: {\n                                          input: function($event) {\n                                            if ($event.target.composing) {\n                                              return\n                                            }\n                                            _vm.addColumnGroupTagValueValue =\n                                              $event.target.value\n                                          }\n                                        }\n                                      })\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"label\", [\n                                      _vm._v(\n                                        \"\\n                            \" +\n                                          _vm._s(_vm.l(\"Default\")) +\n                                          \" \"\n                                      ),\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value:\n                                              _vm.addColumnGroupTagValueDefault,\n                                            expression:\n                                              \"addColumnGroupTagValueDefault\"\n                                          }\n                                        ],\n                                        attrs: { type: \"text\" },\n                                        domProps: {\n                                          value:\n                                            _vm.addColumnGroupTagValueDefault\n                                        },\n                                        on: {\n                                          input: function($event) {\n                                            if ($event.target.composing) {\n                                              return\n                                            }\n                                            _vm.addColumnGroupTagValueDefault =\n                                              $event.target.value\n                                          }\n                                        }\n                                      })\n                                    ])\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"add_column_regex\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.addColumnRegexTarget,\n                                        \"col-headers\": _vm.activeRuleColHeaders\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.addColumnRegexTarget = $event\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"label\", [\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: _vm.addColumnRegexType,\n                                            expression: \"addColumnRegexType\"\n                                          }\n                                        ],\n                                        attrs: {\n                                          type: \"radio\",\n                                          value: \"global\"\n                                        },\n                                        domProps: {\n                                          checked: _vm._q(\n                                            _vm.addColumnRegexType,\n                                            \"global\"\n                                          )\n                                        },\n                                        on: {\n                                          change: function($event) {\n                                            _vm.addColumnRegexType = \"global\"\n                                          }\n                                        }\n                                      }),\n                                      _vm._v(\n                                        \"Create column\\n                            matching expression.\"\n                                      )\n                                    ]),\n                                    _c(\"br\"),\n                                    _vm._v(\" \"),\n                                    _c(\"label\", [\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: _vm.addColumnRegexType,\n                                            expression: \"addColumnRegexType\"\n                                          }\n                                        ],\n                                        attrs: {\n                                          type: \"radio\",\n                                          value: \"groups\"\n                                        },\n                                        domProps: {\n                                          checked: _vm._q(\n                                            _vm.addColumnRegexType,\n                                            \"groups\"\n                                          )\n                                        },\n                                        on: {\n                                          change: function($event) {\n                                            _vm.addColumnRegexType = \"groups\"\n                                          }\n                                        }\n                                      }),\n                                      _vm._v(\n                                        \"Create columns\\n                            matching expression groups.\"\n                                      )\n                                    ]),\n                                    _c(\"br\"),\n                                    _vm._v(\" \"),\n                                    _c(\"label\", [\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: _vm.addColumnRegexType,\n                                            expression: \"addColumnRegexType\"\n                                          }\n                                        ],\n                                        attrs: {\n                                          type: \"radio\",\n                                          value: \"replacement\"\n                                        },\n                                        domProps: {\n                                          checked: _vm._q(\n                                            _vm.addColumnRegexType,\n                                            \"replacement\"\n                                          )\n                                        },\n                                        on: {\n                                          change: function($event) {\n                                            _vm.addColumnRegexType =\n                                              \"replacement\"\n                                          }\n                                        }\n                                      }),\n                                      _vm._v(\n                                        \"Create column\\n                            from expression replacement.\"\n                                      )\n                                    ]),\n                                    _c(\"br\"),\n                                    _vm._v(\" \"),\n                                    _c(\"regular-expression-input\", {\n                                      attrs: {\n                                        target: _vm.addColumnRegexExpression\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.addColumnRegexExpression = $event\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _vm.addColumnRegexType == \"groups\"\n                                      ? _c(\"label\", [\n                                          _vm._v(\n                                            \"\\n                            \" +\n                                              _vm._s(\n                                                _vm.l(\"Number of Groups\")\n                                              ) +\n                                              \"\\n                            \"\n                                          ),\n                                          _c(\"input\", {\n                                            directives: [\n                                              {\n                                                name: \"model\",\n                                                rawName: \"v-model\",\n                                                value:\n                                                  _vm.addColumnRegexGroupCount,\n                                                expression:\n                                                  \"addColumnRegexGroupCount\"\n                                              }\n                                            ],\n                                            attrs: { type: \"number\", min: \"1\" },\n                                            domProps: {\n                                              value:\n                                                _vm.addColumnRegexGroupCount\n                                            },\n                                            on: {\n                                              input: function($event) {\n                                                if ($event.target.composing) {\n                                                  return\n                                                }\n                                                _vm.addColumnRegexGroupCount =\n                                                  $event.target.value\n                                              }\n                                            }\n                                          })\n                                        ])\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _vm.addColumnRegexType == \"replacement\"\n                                      ? _c(\"label\", [\n                                          _vm._v(\n                                            \"\\n                            \" +\n                                              _vm._s(\n                                                _vm.l(\"Replacement Expression\")\n                                              ) +\n                                              \"\\n                            \"\n                                          ),\n                                          _c(\"input\", {\n                                            directives: [\n                                              {\n                                                name: \"model\",\n                                                rawName: \"v-model\",\n                                                value:\n                                                  _vm.addColumnRegexReplacement,\n                                                expression:\n                                                  \"addColumnRegexReplacement\"\n                                              }\n                                            ],\n                                            staticClass: \"rule-replacement\",\n                                            attrs: { type: \"text\" },\n                                            domProps: {\n                                              value:\n                                                _vm.addColumnRegexReplacement\n                                            },\n                                            on: {\n                                              input: function($event) {\n                                                if ($event.target.composing) {\n                                                  return\n                                                }\n                                                _vm.addColumnRegexReplacement =\n                                                  $event.target.value\n                                              }\n                                            }\n                                          })\n                                        ])\n                                      : _vm._e()\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"add_column_concatenate\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.addColumnConcatenateTarget0,\n                                        \"col-headers\": _vm.activeRuleColHeaders\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.addColumnConcatenateTarget0 = $event\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.addColumnConcatenateTarget1,\n                                        \"col-headers\": _vm.activeRuleColHeaders\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.addColumnConcatenateTarget1 = $event\n                                        }\n                                      }\n                                    })\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"add_column_substr\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.addColumnSubstrTarget,\n                                        \"col-headers\": _vm.activeRuleColHeaders\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.addColumnSubstrTarget = $event\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"label\", [\n                                      _c(\n                                        \"select\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.addColumnSubstrType,\n                                              expression: \"addColumnSubstrType\"\n                                            }\n                                          ],\n                                          on: {\n                                            change: function($event) {\n                                              var $$selectedVal = Array.prototype.filter\n                                                .call(\n                                                  $event.target.options,\n                                                  function(o) {\n                                                    return o.selected\n                                                  }\n                                                )\n                                                .map(function(o) {\n                                                  var val =\n                                                    \"_value\" in o\n                                                      ? o._value\n                                                      : o.value\n                                                  return val\n                                                })\n                                              _vm.addColumnSubstrType = $event\n                                                .target.multiple\n                                                ? $$selectedVal\n                                                : $$selectedVal[0]\n                                            }\n                                          }\n                                        },\n                                        [\n                                          _c(\n                                            \"option\",\n                                            { attrs: { value: \"keep_prefix\" } },\n                                            [\n                                              _vm._v(\n                                                \"Keep only prefix specified.\"\n                                              )\n                                            ]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"option\",\n                                            { attrs: { value: \"drop_prefix\" } },\n                                            [\n                                              _vm._v(\n                                                \"Strip off prefix specified.\"\n                                              )\n                                            ]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"option\",\n                                            { attrs: { value: \"keep_suffix\" } },\n                                            [\n                                              _vm._v(\n                                                \"Keep only suffix specified.\"\n                                              )\n                                            ]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"option\",\n                                            { attrs: { value: \"drop_suffix\" } },\n                                            [\n                                              _vm._v(\n                                                \"Strip off suffix specified.\"\n                                              )\n                                            ]\n                                          )\n                                        ]\n                                      )\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"label\", [\n                                      _vm._v(\n                                        \"\\n                            \" +\n                                          _vm._s(\n                                            _vm.l(\"Prefix or suffix length\")\n                                          ) +\n                                          \"\\n                            \"\n                                      ),\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: _vm.addColumnSubstrLength,\n                                            expression: \"addColumnSubstrLength\"\n                                          }\n                                        ],\n                                        attrs: { type: \"number\", min: \"0\" },\n                                        domProps: {\n                                          value: _vm.addColumnSubstrLength\n                                        },\n                                        on: {\n                                          input: function($event) {\n                                            if ($event.target.composing) {\n                                              return\n                                            }\n                                            _vm.addColumnSubstrLength =\n                                              $event.target.value\n                                          }\n                                        }\n                                      })\n                                    ])\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"add_column_value\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"label\", [\n                                      _vm._v(\n                                        \" \" + _vm._s(_vm.l(\"Value\")) + \" \"\n                                      ),\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: _vm.addColumnValue,\n                                            expression: \"addColumnValue\"\n                                          }\n                                        ],\n                                        attrs: { type: \"text\" },\n                                        domProps: { value: _vm.addColumnValue },\n                                        on: {\n                                          input: function($event) {\n                                            if ($event.target.composing) {\n                                              return\n                                            }\n                                            _vm.addColumnValue =\n                                              $event.target.value\n                                          }\n                                        }\n                                      })\n                                    ])\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"remove_columns\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.removeColumnTargets,\n                                        \"col-headers\": _vm.activeRuleColHeaders,\n                                        multiple: true\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.removeColumnTargets = $event\n                                        }\n                                      }\n                                    })\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"split_columns\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.splitColumnsTargets0,\n                                        label: \"Odd Row Column(s)\",\n                                        \"col-headers\": _vm.activeRuleColHeaders,\n                                        multiple: true\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.splitColumnsTargets0 = $event\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.splitColumnsTargets1,\n                                        label: \"Even Row Column(s)\",\n                                        \"col-headers\": _vm.activeRuleColHeaders,\n                                        multiple: true\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.splitColumnsTargets1 = $event\n                                        }\n                                      }\n                                    })\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"swap_columns\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.swapColumnsTarget0,\n                                        label: \"Swap Column\",\n                                        \"col-headers\": _vm.activeRuleColHeaders\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.swapColumnsTarget0 = $event\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.swapColumnsTarget1,\n                                        label: \"With Column\",\n                                        \"col-headers\": _vm.activeRuleColHeaders\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.swapColumnsTarget1 = $event\n                                        }\n                                      }\n                                    })\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"add_filter_regex\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.addFilterRegexTarget,\n                                        \"col-headers\": _vm.activeRuleColHeaders\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.addFilterRegexTarget = $event\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"regular-expression-input\", {\n                                      attrs: {\n                                        target: _vm.addFilterRegexExpression\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.addFilterRegexExpression = $event\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"label\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"b-tooltip\",\n                                            rawName: \"v-b-tooltip.hover\",\n                                            modifiers: { hover: true }\n                                          }\n                                        ],\n                                        attrs: {\n                                          title: _vm.titleInvertFilterRegex\n                                        }\n                                      },\n                                      [\n                                        _c(\"input\", {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.addFilterRegexInvert,\n                                              expression: \"addFilterRegexInvert\"\n                                            }\n                                          ],\n                                          attrs: { type: \"checkbox\" },\n                                          domProps: {\n                                            checked: Array.isArray(\n                                              _vm.addFilterRegexInvert\n                                            )\n                                              ? _vm._i(\n                                                  _vm.addFilterRegexInvert,\n                                                  null\n                                                ) > -1\n                                              : _vm.addFilterRegexInvert\n                                          },\n                                          on: {\n                                            change: function($event) {\n                                              var $$a =\n                                                  _vm.addFilterRegexInvert,\n                                                $$el = $event.target,\n                                                $$c = $$el.checked\n                                                  ? true\n                                                  : false\n                                              if (Array.isArray($$a)) {\n                                                var $$v = null,\n                                                  $$i = _vm._i($$a, $$v)\n                                                if ($$el.checked) {\n                                                  $$i < 0 &&\n                                                    (_vm.addFilterRegexInvert = $$a.concat(\n                                                      [$$v]\n                                                    ))\n                                                } else {\n                                                  $$i > -1 &&\n                                                    (_vm.addFilterRegexInvert = $$a\n                                                      .slice(0, $$i)\n                                                      .concat(\n                                                        $$a.slice($$i + 1)\n                                                      ))\n                                                }\n                                              } else {\n                                                _vm.addFilterRegexInvert = $$c\n                                              }\n                                            }\n                                          }\n                                        }),\n                                        _vm._v(\n                                          \" \" +\n                                            _vm._s(_vm.l(\"Invert filter.\")) +\n                                            \"\\n                        \"\n                                        )\n                                      ]\n                                    )\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"add_filter_matches\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.addFilterMatchesTarget,\n                                        \"col-headers\": _vm.activeRuleColHeaders\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.addFilterMatchesTarget = $event\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"input\", {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value: _vm.addFilterMatchesValue,\n                                          expression: \"addFilterMatchesValue\"\n                                        }\n                                      ],\n                                      attrs: { type: \"text\" },\n                                      domProps: {\n                                        value: _vm.addFilterMatchesValue\n                                      },\n                                      on: {\n                                        input: function($event) {\n                                          if ($event.target.composing) {\n                                            return\n                                          }\n                                          _vm.addFilterMatchesValue =\n                                            $event.target.value\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"label\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"b-tooltip\",\n                                            rawName: \"v-b-tooltip.hover\",\n                                            modifiers: { hover: true }\n                                          }\n                                        ],\n                                        attrs: {\n                                          title: _vm.titleInvertFilterMatches\n                                        }\n                                      },\n                                      [\n                                        _c(\"input\", {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.addFilterMatchesInvert,\n                                              expression:\n                                                \"addFilterMatchesInvert\"\n                                            }\n                                          ],\n                                          attrs: { type: \"checkbox\" },\n                                          domProps: {\n                                            checked: Array.isArray(\n                                              _vm.addFilterMatchesInvert\n                                            )\n                                              ? _vm._i(\n                                                  _vm.addFilterMatchesInvert,\n                                                  null\n                                                ) > -1\n                                              : _vm.addFilterMatchesInvert\n                                          },\n                                          on: {\n                                            change: function($event) {\n                                              var $$a =\n                                                  _vm.addFilterMatchesInvert,\n                                                $$el = $event.target,\n                                                $$c = $$el.checked\n                                                  ? true\n                                                  : false\n                                              if (Array.isArray($$a)) {\n                                                var $$v = null,\n                                                  $$i = _vm._i($$a, $$v)\n                                                if ($$el.checked) {\n                                                  $$i < 0 &&\n                                                    (_vm.addFilterMatchesInvert = $$a.concat(\n                                                      [$$v]\n                                                    ))\n                                                } else {\n                                                  $$i > -1 &&\n                                                    (_vm.addFilterMatchesInvert = $$a\n                                                      .slice(0, $$i)\n                                                      .concat(\n                                                        $$a.slice($$i + 1)\n                                                      ))\n                                                }\n                                              } else {\n                                                _vm.addFilterMatchesInvert = $$c\n                                              }\n                                            }\n                                          }\n                                        }),\n                                        _vm._v(\n                                          \" \" +\n                                            _vm._s(_vm.l(\"Invert filter.\")) +\n                                            \"\\n                        \"\n                                        )\n                                      ]\n                                    )\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"add_filter_compare\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.addFilterCompareTarget,\n                                        \"col-headers\": _vm.activeRuleColHeaders\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.addFilterCompareTarget = $event\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"label\", [\n                                      _vm._v(\n                                        \"\\n                            Filter out rows\\n                            \"\n                                      ),\n                                      _c(\n                                        \"select\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.addFilterCompareType,\n                                              expression: \"addFilterCompareType\"\n                                            }\n                                          ],\n                                          on: {\n                                            change: function($event) {\n                                              var $$selectedVal = Array.prototype.filter\n                                                .call(\n                                                  $event.target.options,\n                                                  function(o) {\n                                                    return o.selected\n                                                  }\n                                                )\n                                                .map(function(o) {\n                                                  var val =\n                                                    \"_value\" in o\n                                                      ? o._value\n                                                      : o.value\n                                                  return val\n                                                })\n                                              _vm.addFilterCompareType = $event\n                                                .target.multiple\n                                                ? $$selectedVal\n                                                : $$selectedVal[0]\n                                            }\n                                          }\n                                        },\n                                        [\n                                          _c(\n                                            \"option\",\n                                            { attrs: { value: \"less_than\" } },\n                                            [\n                                              _vm._v(\n                                                _vm._s(_vm.l(\"less than\")) + \" \"\n                                              )\n                                            ]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"option\",\n                                            {\n                                              attrs: {\n                                                value: \"less_than_equal\"\n                                              }\n                                            },\n                                            [\n                                              _vm._v(\n                                                _vm._s(\n                                                  _vm.l(\"less than or equal to\")\n                                                )\n                                              )\n                                            ]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"option\",\n                                            {\n                                              attrs: { value: \"greater_than\" }\n                                            },\n                                            [\n                                              _vm._v(\n                                                _vm._s(_vm.l(\"greater than\"))\n                                              )\n                                            ]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"option\",\n                                            {\n                                              attrs: {\n                                                value: \"greater_than_equal\"\n                                              }\n                                            },\n                                            [\n                                              _vm._v(\n                                                _vm._s(\n                                                  _vm.l(\n                                                    \"greater than or equal to\"\n                                                  )\n                                                )\n                                              )\n                                            ]\n                                          )\n                                        ]\n                                      )\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"input\", {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value: _vm.addFilterCompareValue,\n                                          expression: \"addFilterCompareValue\"\n                                        }\n                                      ],\n                                      attrs: { type: \"text\" },\n                                      domProps: {\n                                        value: _vm.addFilterCompareValue\n                                      },\n                                      on: {\n                                        input: function($event) {\n                                          if ($event.target.composing) {\n                                            return\n                                          }\n                                          _vm.addFilterCompareValue =\n                                            $event.target.value\n                                        }\n                                      }\n                                    })\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"add_filter_count\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"label\", [\n                                      _vm._v(\n                                        \"\\n                            Filter which rows?\\n                            \"\n                                      ),\n                                      _c(\n                                        \"select\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.addFilterCountWhich,\n                                              expression: \"addFilterCountWhich\"\n                                            }\n                                          ],\n                                          on: {\n                                            change: function($event) {\n                                              var $$selectedVal = Array.prototype.filter\n                                                .call(\n                                                  $event.target.options,\n                                                  function(o) {\n                                                    return o.selected\n                                                  }\n                                                )\n                                                .map(function(o) {\n                                                  var val =\n                                                    \"_value\" in o\n                                                      ? o._value\n                                                      : o.value\n                                                  return val\n                                                })\n                                              _vm.addFilterCountWhich = $event\n                                                .target.multiple\n                                                ? $$selectedVal\n                                                : $$selectedVal[0]\n                                            }\n                                          }\n                                        },\n                                        [\n                                          _c(\n                                            \"option\",\n                                            { attrs: { value: \"first\" } },\n                                            [_vm._v(\"first\")]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"option\",\n                                            { attrs: { value: \"last\" } },\n                                            [_vm._v(\"last\")]\n                                          )\n                                        ]\n                                      )\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"label\", [\n                                      _vm._v(\" Filter how many rows? \"),\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: _vm.addFilterCountN,\n                                            expression: \"addFilterCountN\"\n                                          }\n                                        ],\n                                        attrs: { type: \"number\" },\n                                        domProps: {\n                                          value: _vm.addFilterCountN\n                                        },\n                                        on: {\n                                          input: function($event) {\n                                            if ($event.target.composing) {\n                                              return\n                                            }\n                                            _vm.addFilterCountN =\n                                              $event.target.value\n                                          }\n                                        }\n                                      })\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"label\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"b-tooltip\",\n                                            rawName: \"v-b-tooltip.hover\",\n                                            modifiers: { hover: true }\n                                          }\n                                        ],\n                                        attrs: {\n                                          title: _vm.titleInvertFilterMatches\n                                        }\n                                      },\n                                      [\n                                        _c(\"input\", {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.addFilterCountInvert,\n                                              expression: \"addFilterCountInvert\"\n                                            }\n                                          ],\n                                          attrs: { type: \"checkbox\" },\n                                          domProps: {\n                                            checked: Array.isArray(\n                                              _vm.addFilterCountInvert\n                                            )\n                                              ? _vm._i(\n                                                  _vm.addFilterCountInvert,\n                                                  null\n                                                ) > -1\n                                              : _vm.addFilterCountInvert\n                                          },\n                                          on: {\n                                            change: function($event) {\n                                              var $$a =\n                                                  _vm.addFilterCountInvert,\n                                                $$el = $event.target,\n                                                $$c = $$el.checked\n                                                  ? true\n                                                  : false\n                                              if (Array.isArray($$a)) {\n                                                var $$v = null,\n                                                  $$i = _vm._i($$a, $$v)\n                                                if ($$el.checked) {\n                                                  $$i < 0 &&\n                                                    (_vm.addFilterCountInvert = $$a.concat(\n                                                      [$$v]\n                                                    ))\n                                                } else {\n                                                  $$i > -1 &&\n                                                    (_vm.addFilterCountInvert = $$a\n                                                      .slice(0, $$i)\n                                                      .concat(\n                                                        $$a.slice($$i + 1)\n                                                      ))\n                                                }\n                                              } else {\n                                                _vm.addFilterCountInvert = $$c\n                                              }\n                                            }\n                                          }\n                                        }),\n                                        _vm._v(\n                                          \" \" +\n                                            _vm._s(_vm.l(\"Invert filter.\")) +\n                                            \"\\n                        \"\n                                        )\n                                      ]\n                                    )\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"rule-component\",\n                                  {\n                                    attrs: {\n                                      \"rule-type\": \"add_filter_empty\",\n                                      \"display-rule-type\": _vm.displayRuleType,\n                                      builder: this\n                                    }\n                                  },\n                                  [\n                                    _c(\"column-selector\", {\n                                      attrs: {\n                                        target: _vm.addFilterEmptyTarget,\n                                        \"col-headers\": _vm.activeRuleColHeaders\n                                      },\n                                      on: {\n                                        \"update:target\": function($event) {\n                                          _vm.addFilterEmptyTarget = $event\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"label\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"b-tooltip\",\n                                            rawName: \"v-b-tooltip.hover\",\n                                            modifiers: { hover: true }\n                                          }\n                                        ],\n                                        attrs: {\n                                          title: _vm.titleInvertFilterEmpty\n                                        }\n                                      },\n                                      [\n                                        _c(\"input\", {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.addFilterEmptyInvert,\n                                              expression: \"addFilterEmptyInvert\"\n                                            }\n                                          ],\n                                          attrs: { type: \"checkbox\" },\n                                          domProps: {\n                                            checked: Array.isArray(\n                                              _vm.addFilterEmptyInvert\n                                            )\n                                              ? _vm._i(\n                                                  _vm.addFilterEmptyInvert,\n                                                  null\n                                                ) > -1\n                                              : _vm.addFilterEmptyInvert\n                                          },\n                                          on: {\n                                            change: function($event) {\n                                              var $$a =\n                                                  _vm.addFilterEmptyInvert,\n                                                $$el = $event.target,\n                                                $$c = $$el.checked\n                                                  ? true\n                                                  : false\n                                              if (Array.isArray($$a)) {\n                                                var $$v = null,\n                                                  $$i = _vm._i($$a, $$v)\n                                                if ($$el.checked) {\n                                                  $$i < 0 &&\n                                                    (_vm.addFilterEmptyInvert = $$a.concat(\n                                                      [$$v]\n                                                    ))\n                                                } else {\n                                                  $$i > -1 &&\n                                                    (_vm.addFilterEmptyInvert = $$a\n                                                      .slice(0, $$i)\n                                                      .concat(\n                                                        $$a.slice($$i + 1)\n                                                      ))\n                                                }\n                                              } else {\n                                                _vm.addFilterEmptyInvert = $$c\n                                              }\n                                            }\n                                          }\n                                        }),\n                                        _vm._v(\n                                          \" \" +\n                                            _vm._s(_vm.l(\"Invert filter.\")) +\n                                            \"\\n                        \"\n                                        )\n                                      ]\n                                    )\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _vm.displayRuleType == \"mapping\"\n                                  ? _c(\n                                      \"div\",\n                                      [\n                                        _vm._l(_vm.mapping, function(\n                                          map,\n                                          index\n                                        ) {\n                                          return _c(\n                                            \"div\",\n                                            {\n                                              key: map.type,\n                                              staticClass: \"map\",\n                                              attrs: { index: index }\n                                            },\n                                            [\n                                              _c(\n                                                \"column-selector\",\n                                                {\n                                                  class:\n                                                    \"rule-map-\" +\n                                                    map.type.replace(/_/g, \"-\"),\n                                                  attrs: {\n                                                    label: _vm.mappingTargets()[\n                                                      map.type\n                                                    ].label,\n                                                    help: _vm.mappingTargets()[\n                                                      map.type\n                                                    ].help,\n                                                    target: map.columns,\n                                                    \"ordered-edit\": map.editing,\n                                                    \"col-headers\":\n                                                      _vm.colHeaders,\n                                                    multiple: _vm.mappingTargets()[\n                                                      map.type\n                                                    ].multiple,\n                                                    ordered: true,\n                                                    \"value-as-list\": true\n                                                  },\n                                                  on: {\n                                                    \"update:target\": function(\n                                                      $event\n                                                    ) {\n                                                      return _vm.$set(\n                                                        map,\n                                                        \"columns\",\n                                                        $event\n                                                      )\n                                                    },\n                                                    \"update:orderedEdit\": function(\n                                                      $event\n                                                    ) {\n                                                      return _vm.$set(\n                                                        map,\n                                                        \"editing\",\n                                                        $event\n                                                      )\n                                                    },\n                                                    \"update:ordered-edit\": function(\n                                                      $event\n                                                    ) {\n                                                      return _vm.$set(\n                                                        map,\n                                                        \"editing\",\n                                                        $event\n                                                      )\n                                                    }\n                                                  }\n                                                },\n                                                [\n                                                  _c(\"span\", {\n                                                    directives: [\n                                                      {\n                                                        name: \"b-tooltip\",\n                                                        rawName:\n                                                          \"v-b-tooltip.hover\",\n                                                        modifiers: {\n                                                          hover: true\n                                                        }\n                                                      }\n                                                    ],\n                                                    staticClass: \"fa fa-times\",\n                                                    attrs: {\n                                                      title:\n                                                        _vm.titleRemoveMapping\n                                                    },\n                                                    on: {\n                                                      click: function($event) {\n                                                        return _vm.removeMapping(\n                                                          index\n                                                        )\n                                                      }\n                                                    }\n                                                  })\n                                                ]\n                                              )\n                                            ],\n                                            1\n                                          )\n                                        }),\n                                        _vm._v(\" \"),\n                                        _c(\n                                          \"div\",\n                                          {\n                                            staticClass:\n                                              \"buttons rule-edit-buttons d-flex justify-content-end\"\n                                          },\n                                          [\n                                            _vm.unmappedTargets.length > 0\n                                              ? _c(\n                                                  \"button\",\n                                                  {\n                                                    staticClass:\n                                                      \"dropdown-toggle btn btn-primary mr-1\",\n                                                    attrs: {\n                                                      type: \"button\",\n                                                      \"data-toggle\": \"dropdown\"\n                                                    }\n                                                  },\n                                                  [\n                                                    _c(\"span\", {\n                                                      staticClass:\n                                                        \"fa fa-plus rule-add-mapping\"\n                                                    }),\n                                                    _vm._v(\n                                                      \" \" +\n                                                        _vm._s(\"Add Definition\")\n                                                    ),\n                                                    _c(\"span\", {\n                                                      staticClass: \"caret\"\n                                                    })\n                                                  ]\n                                                )\n                                              : _vm._e(),\n                                            _vm._v(\" \"),\n                                            _c(\n                                              \"div\",\n                                              {\n                                                staticClass: \"dropdown-menu\",\n                                                attrs: { role: \"menu\" }\n                                              },\n                                              _vm._l(\n                                                _vm.unmappedTargets,\n                                                function(target) {\n                                                  return _c(\n                                                    \"a\",\n                                                    {\n                                                      key: target,\n                                                      staticClass:\n                                                        \"dropdown-item\",\n                                                      class:\n                                                        \"rule-add-mapping-\" +\n                                                        target.replace(\n                                                          /_/g,\n                                                          \"-\"\n                                                        ),\n                                                      attrs: {\n                                                        index: target,\n                                                        href:\n                                                          \"javascript:void(0)\"\n                                                      },\n                                                      on: {\n                                                        click: function(\n                                                          $event\n                                                        ) {\n                                                          return _vm.addIdentifier(\n                                                            target\n                                                          )\n                                                        }\n                                                      }\n                                                    },\n                                                    [\n                                                      _vm._v(\n                                                        \"\\n                                    \" +\n                                                          _vm._s(\n                                                            _vm.mappingTargets()[\n                                                              target\n                                                            ].label\n                                                          ) +\n                                                          \"\\n                                \"\n                                                      )\n                                                    ]\n                                                  )\n                                                }\n                                              ),\n                                              0\n                                            ),\n                                            _vm._v(\" \"),\n                                            !_vm.hasActiveMappingEdit\n                                              ? _c(\n                                                  \"b-button\",\n                                                  {\n                                                    directives: [\n                                                      {\n                                                        name: \"b-tooltip\",\n                                                        rawName:\n                                                          \"v-b-tooltip.hover.bottom\",\n                                                        modifiers: {\n                                                          hover: true,\n                                                          bottom: true\n                                                        }\n                                                      }\n                                                    ],\n                                                    staticClass:\n                                                      \"rule-mapping-ok\",\n                                                    attrs: {\n                                                      title:\n                                                        _vm.titleApplyColumnDefinitions\n                                                    },\n                                                    on: {\n                                                      click: function($event) {\n                                                        _vm.displayRuleType = null\n                                                      }\n                                                    }\n                                                  },\n                                                  [\n                                                    _vm._v(\n                                                      _vm._s(_vm.l(\"Apply\"))\n                                                    )\n                                                  ]\n                                                )\n                                              : _vm._e()\n                                          ],\n                                          1\n                                        )\n                                      ],\n                                      2\n                                    )\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.displayRuleType == null\n                                  ? _c(\"div\", { staticClass: \"rule-summary\" }, [\n                                      _c(\"span\", { staticClass: \"title\" }, [\n                                        _vm._v(\n                                          \"\\n                            \" +\n                                            _vm._s(_vm.l(\"Rules\")) +\n                                            \"\\n                            \"\n                                        ),\n                                        _c(\"span\", {\n                                          directives: [\n                                            {\n                                              name: \"b-tooltip\",\n                                              rawName: \"v-b-tooltip.hover\",\n                                              modifiers: { hover: true }\n                                            }\n                                          ],\n                                          staticClass:\n                                            \"fa fa-wrench rule-builder-view-source\",\n                                          attrs: { title: _vm.titleViewSource },\n                                          on: { click: _vm.viewSource }\n                                        })\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _vm.jaggedData\n                                        ? _c(\n                                            \"div\",\n                                            { staticClass: \"rule-warning\" },\n                                            [\n                                              _vm._v(\n                                                \"\\n                            Rows contain differing numbers of columns, there was likely a problem parsing your data.\\n                        \"\n                                              )\n                                            ]\n                                          )\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"ol\",\n                                        { staticClass: \"rules\" },\n                                        [\n                                          _vm._l(_vm.rules, function(\n                                            rule,\n                                            index\n                                          ) {\n                                            return _c(\"rule-display\", {\n                                              key: index,\n                                              attrs: {\n                                                rule: rule,\n                                                index: index,\n                                                \"col-headers\":\n                                                  _vm.colHeadersPerRule[index]\n                                              },\n                                              on: {\n                                                edit: function($event) {\n                                                  return _vm.editRule(\n                                                    rule,\n                                                    index\n                                                  )\n                                                },\n                                                remove: function($event) {\n                                                  return _vm.removeRule(index)\n                                                }\n                                              }\n                                            })\n                                          }),\n                                          _vm._v(\" \"),\n                                          _vm._l(_vm.mapping, function(\n                                            map,\n                                            index\n                                          ) {\n                                            return _c(\n                                              \"identifier-display\",\n                                              _vm._b(\n                                                {\n                                                  key: map.type,\n                                                  attrs: {\n                                                    index: index,\n                                                    \"col-headers\":\n                                                      _vm.colHeaders\n                                                  },\n                                                  on: {\n                                                    remove: function($event) {\n                                                      return _vm.removeMapping(\n                                                        index\n                                                      )\n                                                    },\n                                                    edit: function($event) {\n                                                      _vm.displayRuleType =\n                                                        \"mapping\"\n                                                    }\n                                                  },\n                                                  nativeOn: {\n                                                    mouseover: function(\n                                                      $event\n                                                    ) {\n                                                      map.columns.forEach(\n                                                        function(col) {\n                                                          return _vm.highlightColumn(\n                                                            col\n                                                          )\n                                                        }\n                                                      )\n                                                    },\n                                                    mouseout: function($event) {\n                                                      map.columns.forEach(\n                                                        function(col) {\n                                                          return _vm.unhighlightColumn(\n                                                            col\n                                                          )\n                                                        }\n                                                      )\n                                                    }\n                                                  }\n                                                },\n                                                \"identifier-display\",\n                                                map,\n                                                false\n                                              )\n                                            )\n                                          }),\n                                          _vm._v(\" \"),\n                                          _vm.mapping.length == 0\n                                            ? _c(\"div\", [\n                                                _vm._v(\n                                                  \"\\n                                One or more column definitions must be specified. These are required to specify how\\n                                to build collections and datasets from rows and columns of the table.\\n                                \"\n                                                ),\n                                                _c(\n                                                  \"a\",\n                                                  {\n                                                    attrs: {\n                                                      href: \"javascript:void(0)\"\n                                                    },\n                                                    on: {\n                                                      click: function($event) {\n                                                        _vm.displayRuleType =\n                                                          \"mapping\"\n                                                      }\n                                                    }\n                                                  },\n                                                  [_vm._v(\"Click here\")]\n                                                ),\n                                                _vm._v(\n                                                  \" to\\n                                manage column definitions.\\n                            \"\n                                                )\n                                              ])\n                                            : _vm._e()\n                                        ],\n                                        2\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"div\",\n                                        { staticClass: \"rules-buttons\" },\n                                        [\n                                          _c(\n                                            \"div\",\n                                            { staticClass: \"btn-group dropup\" },\n                                            [\n                                              _c(\n                                                \"button\",\n                                                {\n                                                  directives: [\n                                                    {\n                                                      name: \"b-tooltip\",\n                                                      rawName:\n                                                        \"v-b-tooltip.hover.bottom\",\n                                                      modifiers: {\n                                                        hover: true,\n                                                        bottom: true\n                                                      }\n                                                    }\n                                                  ],\n                                                  staticClass:\n                                                    \"rule-menu-rules-button primary-button dropdown-toggle\",\n                                                  attrs: {\n                                                    type: \"button\",\n                                                    title: _vm.titleRulesMenu,\n                                                    \"data-toggle\": \"dropdown\"\n                                                  }\n                                                },\n                                                [\n                                                  _c(\"span\", {\n                                                    staticClass: \"fa fa-plus\"\n                                                  }),\n                                                  _vm._v(\n                                                    \" \" + _vm._s(_vm.l(\"Rules\"))\n                                                  ),\n                                                  _c(\"span\", {\n                                                    staticClass: \"caret\"\n                                                  })\n                                                ]\n                                              ),\n                                              _vm._v(\" \"),\n                                              _c(\n                                                \"div\",\n                                                {\n                                                  staticClass: \"dropdown-menu\",\n                                                  attrs: { role: \"menu\" }\n                                                },\n                                                [\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\": \"sort\"\n                                                    }\n                                                  }),\n                                                  _vm._v(\" \"),\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\":\n                                                        \"remove_columns\"\n                                                    }\n                                                  }),\n                                                  _vm._v(\" \"),\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\":\n                                                        \"split_columns\"\n                                                    }\n                                                  }),\n                                                  _vm._v(\" \"),\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\":\n                                                        \"swap_columns\"\n                                                    }\n                                                  }),\n                                                  _vm._v(\" \"),\n                                                  _c(\n                                                    \"a\",\n                                                    {\n                                                      staticClass:\n                                                        \"dropdown-item rule-link rule-link-mapping\",\n                                                      attrs: {\n                                                        href:\n                                                          \"javascript:void(0)\"\n                                                      },\n                                                      on: {\n                                                        click: function(\n                                                          $event\n                                                        ) {\n                                                          _vm.displayRuleType =\n                                                            \"mapping\"\n                                                        }\n                                                      }\n                                                    },\n                                                    [\n                                                      _vm._v(\n                                                        \"Add / Modify Column Definitions\"\n                                                      )\n                                                    ]\n                                                  )\n                                                ],\n                                                1\n                                              )\n                                            ]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"div\",\n                                            { staticClass: \"btn-group dropup\" },\n                                            [\n                                              _c(\n                                                \"button\",\n                                                {\n                                                  directives: [\n                                                    {\n                                                      name: \"b-tooltip\",\n                                                      rawName:\n                                                        \"v-b-tooltip.hover.bottom\",\n                                                      modifiers: {\n                                                        hover: true,\n                                                        bottom: true\n                                                      }\n                                                    }\n                                                  ],\n                                                  staticClass:\n                                                    \"rule-menu-filter-button primary-button dropdown-toggle\",\n                                                  attrs: {\n                                                    type: \"button\",\n                                                    title: _vm.titleFilterMenu,\n                                                    \"data-toggle\": \"dropdown\"\n                                                  }\n                                                },\n                                                [\n                                                  _c(\"span\", {\n                                                    staticClass: \"fa fa-plus\"\n                                                  }),\n                                                  _vm._v(\n                                                    \" \" +\n                                                      _vm._s(_vm.l(\"Filter\"))\n                                                  ),\n                                                  _c(\"span\", {\n                                                    staticClass: \"caret\"\n                                                  })\n                                                ]\n                                              ),\n                                              _vm._v(\" \"),\n                                              _c(\n                                                \"div\",\n                                                {\n                                                  staticClass: \"dropdown-menu\",\n                                                  attrs: { role: \"menu\" }\n                                                },\n                                                [\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\":\n                                                        \"add_filter_regex\"\n                                                    }\n                                                  }),\n                                                  _vm._v(\" \"),\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\":\n                                                        \"add_filter_matches\"\n                                                    }\n                                                  }),\n                                                  _vm._v(\" \"),\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\":\n                                                        \"add_filter_compare\"\n                                                    }\n                                                  }),\n                                                  _vm._v(\" \"),\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\":\n                                                        \"add_filter_empty\"\n                                                    }\n                                                  }),\n                                                  _vm._v(\" \"),\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\":\n                                                        \"add_filter_count\"\n                                                    }\n                                                  })\n                                                ],\n                                                1\n                                              )\n                                            ]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"div\",\n                                            { staticClass: \"btn-group dropup\" },\n                                            [\n                                              _c(\n                                                \"button\",\n                                                {\n                                                  directives: [\n                                                    {\n                                                      name: \"b-tooltip\",\n                                                      rawName:\n                                                        \"v-b-tooltip.hover.bottom\",\n                                                      modifiers: {\n                                                        hover: true,\n                                                        bottom: true\n                                                      }\n                                                    }\n                                                  ],\n                                                  staticClass:\n                                                    \"rule-menu-column-button primary-button dropdown-toggle\",\n                                                  attrs: {\n                                                    type: \"button\",\n                                                    title: _vm.titleColumMenu,\n                                                    \"data-toggle\": \"dropdown\"\n                                                  }\n                                                },\n                                                [\n                                                  _c(\"span\", {\n                                                    staticClass: \"fa fa-plus\"\n                                                  }),\n                                                  _vm._v(\n                                                    \" \" +\n                                                      _vm._s(_vm.l(\"Column\"))\n                                                  ),\n                                                  _c(\"span\", {\n                                                    staticClass: \"caret\"\n                                                  })\n                                                ]\n                                              ),\n                                              _vm._v(\" \"),\n                                              _c(\n                                                \"div\",\n                                                {\n                                                  staticClass: \"dropdown-menu\",\n                                                  attrs: { role: \"menu\" }\n                                                },\n                                                [\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\":\n                                                        \"add_column_basename\"\n                                                    }\n                                                  }),\n                                                  _vm._v(\" \"),\n                                                  _vm.metadataOptions\n                                                    ? _c(\n                                                        \"rule-target-component\",\n                                                        {\n                                                          attrs: {\n                                                            builder: this,\n                                                            \"rule-type\":\n                                                              \"add_column_metadata\"\n                                                          }\n                                                        }\n                                                      )\n                                                    : _vm._e(),\n                                                  _vm._v(\" \"),\n                                                  _vm.hasTagsMetadata\n                                                    ? _c(\n                                                        \"rule-target-component\",\n                                                        {\n                                                          attrs: {\n                                                            builder: this,\n                                                            \"rule-type\":\n                                                              \"add_column_group_tag_value\"\n                                                          }\n                                                        }\n                                                      )\n                                                    : _vm._e(),\n                                                  _vm._v(\" \"),\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\":\n                                                        \"add_column_regex\"\n                                                    }\n                                                  }),\n                                                  _vm._v(\" \"),\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\":\n                                                        \"add_column_concatenate\"\n                                                    }\n                                                  }),\n                                                  _vm._v(\" \"),\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\":\n                                                        \"add_column_rownum\"\n                                                    }\n                                                  }),\n                                                  _vm._v(\" \"),\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\":\n                                                        \"add_column_value\"\n                                                    }\n                                                  }),\n                                                  _vm._v(\" \"),\n                                                  _c(\"rule-target-component\", {\n                                                    attrs: {\n                                                      builder: this,\n                                                      \"rule-type\":\n                                                        \"add_column_substr\"\n                                                    }\n                                                  })\n                                                ],\n                                                1\n                                              )\n                                            ]\n                                          )\n                                        ]\n                                      )\n                                    ])\n                                  : _vm._e()\n                              ],\n                              1\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _vm.initialElements !== null\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"table-column\",\n                                class: _vm.orientation,\n                                staticStyle: { width: \"100%\" }\n                              },\n                              [\n                                _c(\"hot-table\", {\n                                  ref: \"hotTable\",\n                                  attrs: {\n                                    id: \"hot-table\",\n                                    data: _vm.hotData.data,\n                                    \"col-headers\": _vm.colHeadersDisplay,\n                                    \"read-only\": true,\n                                    \"stretch-h\": \"all\"\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          : _vm._e()\n                      ]\n                    )\n                  : _vm._e()\n              ]),\n          _vm._v(\" \"),\n          _vm.ruleView == \"source\"\n            ? _c(\n                \"rule-modal-footer\",\n                [\n                  _c(\n                    \"b-button\",\n                    {\n                      directives: [\n                        {\n                          name: \"b-tooltip\",\n                          rawName: \"v-b-tooltip.hover\",\n                          modifiers: { hover: true }\n                        }\n                      ],\n                      staticClass: \"rule-btn-cancel\",\n                      attrs: { title: _vm.titleSourceCancel },\n                      on: { click: _vm.cancelSourceEdit }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n            \" +\n                          _vm._s(_vm.l(\"Cancel\")) +\n                          \"\\n        \"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-button\",\n                    {\n                      directives: [\n                        {\n                          name: \"b-tooltip\",\n                          rawName: \"v-b-tooltip.hover\",\n                          modifiers: { hover: true }\n                        }\n                      ],\n                      staticClass: \"creator-reset-btn rule-btn-reset\",\n                      attrs: { title: _vm.titleSourceReset }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n            \" + _vm._s(_vm.l(\"Reset\")) + \"\\n        \"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-button\",\n                    {\n                      directives: [\n                        {\n                          name: \"b-tooltip\",\n                          rawName: \"v-b-tooltip.hover\",\n                          modifiers: { hover: true }\n                        }\n                      ],\n                      staticClass: \"rule-btn-okay\",\n                      attrs: { title: _vm.titleSourceApply },\n                      on: { click: _vm.attemptRulePreview }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n            \" + _vm._s(_vm.l(\"Apply\")) + \"\\n        \"\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            : _vm.ruleView == \"normal\"\n            ? _c(\n                \"rule-modal-footer\",\n                {\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"inputs\",\n                        fn: function() {\n                          return [\n                            _c(\"div\", { staticClass: \"rule-footer-inputs\" }, [\n                              _vm.elementsType == \"datasets\"\n                                ? _c(\"label\", [\n                                    _vm._v(\n                                      \" \" +\n                                        _vm._s(\n                                          _vm.l(\"Hide original elements\")\n                                        ) +\n                                        \": \"\n                                    )\n                                  ])\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.elementsType == \"datasets\"\n                                ? _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value: _vm.hideSourceItems,\n                                        expression: \"hideSourceItems\"\n                                      }\n                                    ],\n                                    attrs: { type: \"checkbox\" },\n                                    domProps: {\n                                      checked: Array.isArray(\n                                        _vm.hideSourceItems\n                                      )\n                                        ? _vm._i(_vm.hideSourceItems, null) > -1\n                                        : _vm.hideSourceItems\n                                    },\n                                    on: {\n                                      change: function($event) {\n                                        var $$a = _vm.hideSourceItems,\n                                          $$el = $event.target,\n                                          $$c = $$el.checked ? true : false\n                                        if (Array.isArray($$a)) {\n                                          var $$v = null,\n                                            $$i = _vm._i($$a, $$v)\n                                          if ($$el.checked) {\n                                            $$i < 0 &&\n                                              (_vm.hideSourceItems = $$a.concat(\n                                                [$$v]\n                                              ))\n                                          } else {\n                                            $$i > -1 &&\n                                              (_vm.hideSourceItems = $$a\n                                                .slice(0, $$i)\n                                                .concat($$a.slice($$i + 1)))\n                                          }\n                                        } else {\n                                          _vm.hideSourceItems = $$c\n                                        }\n                                      }\n                                    }\n                                  })\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.extension && _vm.showFileTypeSelector\n                                ? _c(\n                                    \"div\",\n                                    {\n                                      staticClass: \"rule-footer-extension-group\"\n                                    },\n                                    [\n                                      _c(\"label\", [\n                                        _vm._v(\n                                          \" \" + _vm._s(_vm.l(\"Type\")) + \": \"\n                                        )\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"select2\",\n                                        {\n                                          staticClass: \"extension-select\",\n                                          attrs: { name: \"extension\" },\n                                          model: {\n                                            value: _vm.extension,\n                                            callback: function($$v) {\n                                              _vm.extension = $$v\n                                            },\n                                            expression: \"extension\"\n                                          }\n                                        },\n                                        _vm._l(_vm.extensions, function(col) {\n                                          return _c(\n                                            \"option\",\n                                            {\n                                              key: col.id,\n                                              domProps: { value: col[\"id\"] }\n                                            },\n                                            [_vm._v(_vm._s(col[\"text\"]))]\n                                          )\n                                        }),\n                                        0\n                                      )\n                                    ],\n                                    1\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.genome && _vm.showGenomeSelector\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"rule-footer-genome-group\" },\n                                    [\n                                      _c(\"label\", [\n                                        _vm._v(\n                                          \" \" + _vm._s(_vm.l(\"Genome\")) + \": \"\n                                        )\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"select2\",\n                                        {\n                                          staticClass: \"genome-select\",\n                                          model: {\n                                            value: _vm.genome,\n                                            callback: function($$v) {\n                                              _vm.genome = $$v\n                                            },\n                                            expression: \"genome\"\n                                          }\n                                        },\n                                        _vm._l(_vm.genomes, function(col) {\n                                          return _c(\n                                            \"option\",\n                                            {\n                                              key: col.id,\n                                              domProps: { value: col[\"id\"] }\n                                            },\n                                            [_vm._v(_vm._s(col[\"text\"]))]\n                                          )\n                                        }),\n                                        0\n                                      )\n                                    ],\n                                    1\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.showAddNameTag\n                                ? _c(\"label\", [\n                                    _vm._v(\n                                      \" \" +\n                                        _vm._s(_vm.l(\"Add nametag for name\")) +\n                                        \": \"\n                                    )\n                                  ])\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.showAddNameTag\n                                ? _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value: _vm.addNameTag,\n                                        expression: \"addNameTag\"\n                                      }\n                                    ],\n                                    attrs: { type: \"checkbox\" },\n                                    domProps: {\n                                      checked: Array.isArray(_vm.addNameTag)\n                                        ? _vm._i(_vm.addNameTag, null) > -1\n                                        : _vm.addNameTag\n                                    },\n                                    on: {\n                                      change: function($event) {\n                                        var $$a = _vm.addNameTag,\n                                          $$el = $event.target,\n                                          $$c = $$el.checked ? true : false\n                                        if (Array.isArray($$a)) {\n                                          var $$v = null,\n                                            $$i = _vm._i($$a, $$v)\n                                          if ($$el.checked) {\n                                            $$i < 0 &&\n                                              (_vm.addNameTag = $$a.concat([\n                                                $$v\n                                              ]))\n                                          } else {\n                                            $$i > -1 &&\n                                              (_vm.addNameTag = $$a\n                                                .slice(0, $$i)\n                                                .concat($$a.slice($$i + 1)))\n                                          }\n                                        } else {\n                                          _vm.addNameTag = $$c\n                                        }\n                                      }\n                                    }\n                                  })\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.showCollectionNameInput\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"rule-footer-name-group\" },\n                                    [\n                                      _c(\"b-input\", {\n                                        directives: [\n                                          {\n                                            name: \"b-tooltip\",\n                                            rawName: \"v-b-tooltip.hover\",\n                                            modifiers: { hover: true }\n                                          }\n                                        ],\n                                        staticClass: \"collection-name\",\n                                        attrs: {\n                                          placeholder: _vm.namePlaceholder,\n                                          title: _vm.namePlaceholder\n                                        },\n                                        model: {\n                                          value: _vm.collectionName,\n                                          callback: function($$v) {\n                                            _vm.collectionName = $$v\n                                          },\n                                          expression: \"collectionName\"\n                                        }\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"label\", [\n                                        _vm._v(\n                                          \" \" + _vm._s(_vm.l(\"Name\")) + \": \"\n                                        )\n                                      ])\n                                    ],\n                                    1\n                                  )\n                                : _vm._e()\n                            ])\n                          ]\n                        },\n                        proxy: true\n                      }\n                    ],\n                    null,\n                    false,\n                    2552130578\n                  )\n                },\n                [\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-button\",\n                    {\n                      directives: [\n                        {\n                          name: \"b-tooltip\",\n                          rawName: \"v-b-tooltip.hover\",\n                          modifiers: { hover: true }\n                        }\n                      ],\n                      staticClass: \"creator-cancel-btn rule-btn-cancel\",\n                      attrs: { help: _vm.titleCancel, tabindex: \"-1\" },\n                      on: { click: _vm.cancel }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n            \" +\n                          _vm._s(_vm.l(\"Cancel\")) +\n                          \"\\n        \"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-button\",\n                    {\n                      directives: [\n                        {\n                          name: \"b-tooltip\",\n                          rawName: \"v-b-tooltip.hover\",\n                          modifiers: { hover: true }\n                        }\n                      ],\n                      staticClass: \"creator-reset-btn rule-btn-reset\",\n                      attrs: { title: _vm.titleReset },\n                      on: { click: _vm.resetRulesAndState }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n            \" + _vm._s(_vm.l(\"Reset\")) + \"\\n        \"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-button\",\n                    {\n                      directives: [\n                        {\n                          name: \"b-tooltip\",\n                          rawName: \"v-b-tooltip.hover\",\n                          modifiers: { hover: true }\n                        }\n                      ],\n                      staticClass: \"create-collection rule-btn-okay\",\n                      attrs: {\n                        title: _vm.titleFinish,\n                        variant: \"primary\",\n                        disabled: !_vm.validInput\n                      },\n                      on: { click: _vm.createCollection }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n            \" +\n                          _vm._s(_vm.finishButtonTitle) +\n                          \"\\n        \"\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            : _vm._e()\n        ],\n        1\n      )\n    : _vm.state == \"wait\"\n    ? _c(\n        \"state-div\",\n        [\n          _vm.importType == \"datasets\"\n            ? _c(\"rule-modal-header\", [\n                _vm._v(\n                  \"\\n        \" +\n                    _vm._s(\n                      _vm.l(\n                        \"Datasets submitted to Galaxy for creation, this dialog will close when dataset creation is complete. You may close this dialog at any time, but you will not be informed of errors with dataset creation and you may have to refresh your history manually to view new datasets once complete.\"\n                      )\n                    ) +\n                    \"\\n    \"\n                )\n              ])\n            : _vm.importType == \"collections\"\n            ? _c(\"rule-modal-header\", [\n                _vm._v(\n                  \"\\n        \" +\n                    _vm._s(\n                      _vm.l(\n                        \"Galaxy is waiting for collection creation, this dialog will close when this is complete. You may close this dialog at any time, but you will not be informed of errors with collection creation and you may have to refresh your history manually to view new collections once complete.\"\n                      )\n                    ) +\n                    \"\\n    \"\n                )\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"rule-modal-footer\",\n            [\n              _c(\n                \"b-button\",\n                {\n                  staticClass: \"creator-cancel-btn\",\n                  attrs: { tabindex: \"-1\" },\n                  on: { click: _vm.cancel }\n                },\n                [_vm._v(\" \" + _vm._s(_vm.l(\"Close\")) + \" \")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    : _vm.state == \"error\"\n    ? _c(\n        \"state-div\",\n        [\n          _c(\"rule-modal-header\", [_vm._v(\" A problem was encountered. \")]),\n          _vm._v(\" \"),\n          _c(\"rule-modal-middle\", [\n            _c(\"p\", { staticClass: \"errormessagelarge\" }, [\n              _vm._v(_vm._s(_vm.errorMessage))\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"rule-modal-footer\",\n            [\n              _c(\n                \"b-button\",\n                {\n                  directives: [\n                    {\n                      name: \"b-tooltip\",\n                      rawName: \"v-b-tooltip.hover\",\n                      modifiers: { hover: true }\n                    }\n                  ],\n                  staticClass: \"creator-cancel-btn\",\n                  attrs: { title: _vm.titleCancel, tabindex: \"-1\" },\n                  on: { click: _vm.cancel }\n                },\n                [\n                  _vm._v(\n                    \"\\n            \" + _vm._s(_vm.l(\"Close\")) + \"\\n        \"\n                  )\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"b-button\",\n                {\n                  directives: [\n                    {\n                      name: \"b-tooltip\",\n                      rawName: \"v-b-tooltip.hover\",\n                      modifiers: { hover: true }\n                    }\n                  ],\n                  attrs: { title: _vm.titleErrorOkay, tabindex: \"-1\" },\n                  on: {\n                    click: function($event) {\n                      _vm.state = \"build\"\n                    }\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n            \" + _vm._s(_vm.l(\"Okay\")) + \"\\n        \"\n                  )\n                ]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./galaxy/scripts/components/RuleCollectionBuilder.vue?vue&type=template&id=61c51560&\n");

/***/ })

}]);